<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>TPshop商城功能测试</title>
      <link href="/Zzhanp.github.io/2021/11/04/tpshop-shang-cheng-gong-neng-ce-shi/"/>
      <url>/Zzhanp.github.io/2021/11/04/tpshop-shang-cheng-gong-neng-ce-shi/</url>
      
        <content type="html"><![CDATA[<h1 id="TPshop商城项目"><a href="#TPshop商城项目" class="headerlink" title="TPshop商城项目"></a>TPshop商城项目</h1><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><h3 id="软件组成"><a href="#软件组成" class="headerlink" title="软件组成"></a>软件组成</h3><p>前台、前端、后台、后端</p><p>应用服务器：前台的请求进行存储转发处理的应用服务</p><p>常见Web服务器：</p><p>Apache：稳定性较好，对于PHP项目的支持非常好</p><p>Nginx：并发性比较好，常和其他Web服务器一起使用</p><p>数据库：MySQL、Oracle</p><p>硬件服务器：物理机、云服务器、虚拟机</p><h3 id="搭建环境遇到的坑"><a href="#搭建环境遇到的坑" class="headerlink" title="搭建环境遇到的坑"></a>搭建环境遇到的坑</h3><h4 id="一、phpstudy的mysql无法启动"><a href="#一、phpstudy的mysql无法启动" class="headerlink" title="一、phpstudy的mysql无法启动"></a>一、phpstudy的mysql无法启动</h4><p>场景：点击启动mysql后，很快mysql就会停止。</p><p>原因：phpstudy的mysql和电脑本身的mysql服务冲突</p><p>解决方案：到服务中将电脑本身的mysql服务停止即可</p><h4 id="二、配置网站时提示添加sql-mode"><a href="#二、配置网站时提示添加sql-mode" class="headerlink" title="二、配置网站时提示添加sql-mode"></a>二、配置网站时提示添加sql-mode</h4><p>解决方案：在phpstudy的mysql文件夹中，打开mysql.ini，在[mysqlld]中添加sql-mode=NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</p><h4 id="三、配置完加载页面是php报错"><a href="#三、配置完加载页面是php报错" class="headerlink" title="三、配置完加载页面是php报错"></a>三、配置完加载页面是php报错</h4><p>具体报错：Use of undefined constant level - assumed ‘level’ (this will throw an Error in a future version of PHP</p><p>原因：大概是高级版本的PHP不太兼容</p><p>解决方案：在phpstudy中选择php版本为5.4</p><h2 id="熟悉项目"><a href="#熟悉项目" class="headerlink" title="熟悉项目"></a>熟悉项目</h2><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>知道干什么以及怎么干</p><h3 id="标准"><a href="#标准" class="headerlink" title="标准"></a>标准</h3><ul><li>熟悉项目的核心模块：登录、注册、加购物车、购买等等。</li><li>熟悉项目的核心业务流程</li></ul><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ul><li>熟悉项目的用户和角色：项目是给谁用的？</li><li>熟悉项目的组织架构：包含的功能模块有哪些？</li><li>熟悉项目的核心业务流程：项目是做什么的？</li><li>熟悉项目的核心功能模块：项目中最重要的功能模块有哪些？</li></ul><h3 id="信息来源"><a href="#信息来源" class="headerlink" title="信息来源"></a>信息来源</h3><p>已存在的文档：需求说明书、设计文档、测试用例、用户使用手册等</p><p>项目中环境：开发环境、测试环境、生产环境</p><p>询问项目组相关成员</p><h2 id="TPshop"><a href="#TPshop" class="headerlink" title="TPshop"></a>TPshop</h2><h3 id="熟悉项目-1"><a href="#熟悉项目-1" class="headerlink" title="熟悉项目"></a>熟悉项目</h3><h4 id="给谁用："><a href="#给谁用：" class="headerlink" title="给谁用："></a>给谁用：</h4><p>前台：游客、注册会员</p><p>后台：客服、仓库管理员、超级管理员</p><h4 id="组织架构："><a href="#组织架构：" class="headerlink" title="组织架构："></a>组织架构：</h4><p>拆分：</p><ul><li><p>后台：</p></li><li><p>前台：从上到下、从左到右</p></li></ul><h4 id="核心业务流程："><a href="#核心业务流程：" class="headerlink" title="核心业务流程："></a>核心业务流程：</h4><p>商品购买流程</p><p>商品发货流程</p><p>商品退换货流程</p><h4 id="核心模块"><a href="#核心模块" class="headerlink" title="核心模块"></a>核心模块</h4><p>会员、商品、订单等（在业务流程中找）</p><p>根据业务流程及组织架构，标出最重要的模块</p><h3 id="技术实现"><a href="#技术实现" class="headerlink" title="技术实现"></a>技术实现</h3><p>Web服务器：Apache</p><p>数据库：MySQL</p><p>PHP网站框架</p><h2 id="测试流程（重点）"><a href="#测试流程（重点）" class="headerlink" title="测试流程（重点）"></a>测试流程（重点）</h2><p>作用：有序有效开展测试工作的基本步骤</p><ol><li><strong>需求评审</strong>：对于产品编写需求文档进行评审和评估的过程</li><li><strong>编写测试计划和测试方案</strong>：实施测试过程中需要的设备、资源、时间等信息</li><li><strong>测试用例设计和评审</strong></li><li><strong>测试执行并提交缺陷</strong></li><li><strong>编写测试报告</strong>：对于整体测试过程的总结和质量的说明</li></ol><h4 id="需求评审"><a href="#需求评审" class="headerlink" title="需求评审"></a>需求评审</h4><p>项目相关人员就软件需求进行确认和评估的相关活动。</p><p>作用：保证需求说明书的完整、准确，保证项目团队对需求的理解达成一致。</p><p>人员：产品、开发、测试</p><p>测试职责：</p><ul><li>读懂需求：确认自己对需求有清晰的理解，没有疑惑</li><li>找出错误：确认需求文档完整、准确，能够指导后期工作</li><li>给出建议：对需求中不合适的地方提出自己的修改建议</li></ul><h4 id="测试计划"><a href="#测试计划" class="headerlink" title="测试计划"></a>测试计划</h4><p>定义：测试计划是一个测试过程中的文档，描述了要进行的测试活动的范围、方法、资源和进度。</p><p>核心内容：</p><ul><li>明确的测试目标与测试范围：最终要达成的要求、测试多少</li><li>执行计划的角色与职责：什么人干什么事</li><li>任务的进度安排与资源分配：花费多长时间，需要哪些资源</li><li>风险估计和应急计划：可能遇到的风险，以及如何应对</li><li>测试的准入/准出标准：什么时候开始，什么时候结束</li></ul><h4 id="测试方案"><a href="#测试方案" class="headerlink" title="测试方案"></a>测试方案</h4><p>测试过程中的文档，从测试的技术角度去分析需求，在方向上明确要怎么测，分析结果重点在于测试策略与技术实现。</p><p>核心内容：</p><ul><li>测试策略：具体使用的方式方法，如何完成测试工作</li><li>测试环境的规划：具体实施需要的测试环境</li><li>测试工具的设计和选择：具体实施测试工作可能需要的一些工具</li></ul><h5 id="测试策略"><a href="#测试策略" class="headerlink" title="测试策略"></a>测试策略</h5><ul><li><strong>界面（UI）测试</strong></li><li><strong>功能测试</strong></li><li><strong>易用性测试</strong></li><li><strong>性能测试</strong></li><li><strong>安全性测试</strong></li><li><strong>兼容性测试</strong></li><li>回归测试</li></ul><h4 id="测试计划与方案的对比"><a href="#测试计划与方案的对比" class="headerlink" title="测试计划与方案的对比"></a>测试计划与方案的对比</h4><p>区别：</p><ul><li>测试计划是管理型文档，描述“测试什么，谁来测试”</li><li>测试方案是技术型文档，描述“怎么测”</li></ul><p>联系：</p><ul><li>实际项目中测试计划与方案可以合并为一个文档</li><li>一般有测试组长编写指制定</li></ul><h2 id="数据库表"><a href="#数据库表" class="headerlink" title="数据库表"></a>数据库表</h2><p>tp_users</p><p>tp_goods</p><p>tp_order</p><p>tp_cart</p><h2 id="恢复tpshop数据"><a href="#恢复tpshop数据" class="headerlink" title="恢复tpshop数据"></a>恢复tpshop数据</h2><ul><li>把tpshop相关的数据库全部删除</li><li>到tpshop的安装目录</li><li>删除install.lock</li><li>打开127.0.0.1/install重新安装</li></ul><h2 id="功能测试"><a href="#功能测试" class="headerlink" title="功能测试"></a>功能测试</h2><p>测试步骤：</p><p>需求分析 ：<strong>需求文档、产品原型图、UI设计图</strong></p><p>测试点整理：能够直接编写测试用例的程度</p><ul><li>根据需求拆分不同的功能点：不同意思拆分出即可，观察法、用例设计方法</li><li>可以按照原型图拆分：所见及所测，与被测对象紧密相关的功能</li></ul><p>编写测试用例：按照用例模板编写</p><ul><li>能看懂：确保每个用例通俗易懂</li><li>能执行：测试用例清晰准确，用例中每个步骤都是可执行的</li></ul><p>评审测试用例：查漏补缺、理解一致、指导执行</p><p>执行测试用例：</p><ul><li>严格按照测试用例书写的步骤执行</li><li>失败的用例，及时提交缺陷报告</li></ul><p>缺陷跟踪：提bug：可复现、唯一性、规范性</p><h3 id="轮播图功能测试"><a href="#轮播图功能测试" class="headerlink" title="轮播图功能测试"></a>轮播图功能测试</h3><h4 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h4><p><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/image-20211026134951016.png" alt="image-20211026134951016"></p><h4 id="整理测试点"><a href="#整理测试点" class="headerlink" title="整理测试点"></a>整理测试点</h4><ul><li>显示1-5张banner图片：边界值：1、5、3、0、6</li><li>自动轮播，3秒切换一张：观察法</li><li>一张不轮播</li><li>鼠标悬停不轮播</li><li>实心为当前图</li><li>点击图片可以跳转</li><li>点击左切换一张图片</li><li>点击右切换一张图片</li></ul><p>动作+结果</p><p>测试结果：</p><p>pass、failed、block、N/A</p><h4 id="编写测试用例"><a href="#编写测试用例" class="headerlink" title="编写测试用例"></a>编写测试用例</h4><table><thead><tr><th>ID</th><th>模块</th><th>优先级</th><th>用例标题</th><th>预置条件</th><th>测试步骤</th><th>测试数据</th><th>预期结果</th></tr></thead><tbody><tr><td>Tpshop-banner-001</td><td>轮播图</td><td>P2</td><td>验证一张轮播图显示</td><td>1.网络正常     2.管理员在后台设置显示1张轮播图</td><td>1.打开浏览器，访问商城地址     2.观察banner图片显示数量</td><td>1</td><td>显示1张图片且显示正确</td></tr><tr><td>Tpshop-banner-002</td><td>轮播图</td><td>P2</td><td>验证没有轮播图时是否显示图片</td><td>1.网络正常     2.管理员在后台设置显示0张轮播图</td><td>1.打开浏览器，访问商城地址     2.观察banner图片显示数量</td><td>0</td><td>不显示图片</td></tr><tr><td>Tpshop-banner-003</td><td>轮播图</td><td>P2</td><td>验证轮播图切换时间是否正确</td><td>1.网络正常     2.管理员在后台设置显示5张轮播图</td><td>1.打开浏览器，访问商城地址     2.观察banner切换时间</td><td>0</td><td>3秒钟切换一张</td></tr><tr><td>Tpshop-banner-004</td><td>轮播图</td><td>P2</td><td>验证单张图片是否轮播</td><td>1.网络正常     2.管理员在后台设置显示1张轮播图</td><td>1.打开浏览器，访问商城地址     2.观察轮播图是否轮播</td><td>1</td><td>轮播图不轮播</td></tr></tbody></table><h4 id="评审测试用例"><a href="#评审测试用例" class="headerlink" title="评审测试用例"></a>评审测试用例</h4><p>查漏补缺、理解一致、指导执行</p><h4 id="执行测试用例"><a href="#执行测试用例" class="headerlink" title="执行测试用例"></a>执行测试用例</h4><h3 id="购物车功能测试"><a href="#购物车功能测试" class="headerlink" title="购物车功能测试"></a>购物车功能测试</h3><p><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/image-20211026190518711.png" alt="image-20211026190518711" style="zoom: 80%;"></p><h3 id="会员列表（列表类）"><a href="#会员列表（列表类）" class="headerlink" title="会员列表（列表类）"></a>会员列表（列表类）</h3><p>判定表法、等价类边界值法</p><ul><li>功能</li><li>UI效果（是否可拖拽）</li><li>按钮：快速点击，是否重复发送</li><li>后台、前台</li></ul><h3 id="抢购"><a href="#抢购" class="headerlink" title="抢购"></a>抢购</h3><ul><li>基本功能</li><li>列表</li></ul><h2 id="非功能"><a href="#非功能" class="headerlink" title="非功能"></a>非功能</h2><p>基本测试策略：</p><ul><li>冒烟测试：基本功能检查、核心业务流程测试</li><li>单功能测试</li><li>集成测试与回归</li><li>系统测试与回归</li><li>验收测试与回归</li></ul><h3 id="兼容性测试"><a href="#兼容性测试" class="headerlink" title="兼容性测试"></a>兼容性测试</h3><p>概念：不同平台、系统都能正常工作</p><p>测试关注点（Web）：</p><ul><li>浏览器：IE、Chrome、FireFox</li><li>操作系统：Windows、Linux、mac等</li><li>网络</li><li>分辨率</li></ul><h3 id="界面测试"><a href="#界面测试" class="headerlink" title="界面测试"></a>界面测试</h3><p>测试用户界面的功能模块的布局是否合理、整体风格是否一致、各个控件是否符合客户使用习惯</p><ul><li>布局</li><li>风格</li><li>按钮</li><li>测试基本原则：参照UI设计图</li><li>若无原型图：<ul><li>导航测试</li><li>图形测试</li><li>内容测试（有无错别字）</li><li>整体界面风格测试</li></ul></li></ul><h3 id="易用性"><a href="#易用性" class="headerlink" title="易用性"></a>易用性</h3><p>易懂、易学</p><p>关注点：</p><ul><li>用户群体</li><li>计算机水平</li><li>项目复杂性</li></ul><h3 id="性能测试"><a href="#性能测试" class="headerlink" title="性能测试"></a>性能测试</h3><p>什么时候考虑：</p><ul><li>对性能有要求</li><li>用户量大</li><li>并发测试、压力测试、负载测试</li></ul><h3 id="安全性"><a href="#安全性" class="headerlink" title="安全性"></a>安全性</h3><p>关注点：</p><p>输入数据：登录时密码是否进行加密以及密码是否容易破解，敏感信息遮挡处理，不能复制</p><p>传输数据：加密要有复杂度</p><p>输出数据：数据库中敏感信息要加密</p><h2 id="测试报告"><a href="#测试报告" class="headerlink" title="测试报告"></a>测试报告</h2><ul><li>测试工作的经过与结果</li><li>风险评估</li><li>缺陷汇总与分析</li><li>测试工作总结与改进</li></ul><h2 id="抓包"><a href="#抓包" class="headerlink" title="抓包"></a>抓包</h2><h3 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h3><p>协议://ip或域名:端口号/资源路径</p><p>端口号：</p><ul><li>http：默认端口80</li><li>https：默认端口443</li><li>ssh：默认端口22</li></ul><p>参数：用?与URL的主体部分分开</p><p>格式：参数名=参数值，有多个参数值用&amp;拼接</p><h3 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h3><h4 id="请求"><a href="#请求" class="headerlink" title="请求"></a>请求</h4><pre class=" language-yacas"><code class="language-yacas">POST http://localhost/index.php?m=Home&c=User&a=do_login&t=0.04464880318635145 HTTP/1.1Host: localhostConnection: keep-aliveContent-Length: 53sec-ch-ua: "Google Chrome";v="95", "Chromium";v="95", ";Not A Brand";v="99"Accept: application/json, text/javascript, */*; q=0.01Content-Type: application/x-www-form-urlencoded; charset=UTF-8X-Requested-With: XMLHttpRequestusername=18500860000&password=123456&verify_code=8888</code></pre><ul><li><p>请求内容</p><ul><li>请求行：第一行<ul><li>请求方式：POST</li><li>请求地址</li><li>协议及版本</li></ul></li><li>请求头：第一行之后，空行之前：描述客户端相关信息</li><li>请求体：</li></ul></li><li><p>请求方式：POST和GET</p><ul><li>GET：用于查询，如搜索商品，参数在URL中，不是很安全</li><li>POST：用于提交数据，相对比较安全，如登录、注册等。</li></ul></li></ul><h4 id="响应"><a href="#响应" class="headerlink" title="响应"></a>响应</h4><p>响应内容：</p><ul><li>响应头</li><li>响应行</li><li>响应体</li></ul><p>响应状态码：</p><ul><li>2xx：成功，如200</li><li>3xx：重定向，如301</li><li>4xx：客户端存在问题，如404</li><li>5xx：服务器端存在问题，如501</li></ul><h4 id="面试题：GET和POST的区别"><a href="#面试题：GET和POST的区别" class="headerlink" title="面试题：GET和POST的区别"></a>面试题：GET和POST的区别</h4><ul><li><strong>最直观的区别就是GET把参数包含在URL中，POST通过request body（请求体）传递参数。</strong></li><li><strong>GET比POST更不安全，因为参数直接暴露在URL上，所以不能用来传递敏感信息。</strong></li><li>GET在浏览器回退时是无害的，而POST会再次提交请求。</li><li>GET请求只能进行url编码，而POST支持多种编码方式。</li><li>GET请求参数会被完整保留在浏览器历史记录里，而POST中的参数不会被保留。</li><li><strong>GET请求在URL中传送的参数是有长度限制的，而POST没有（注意：这个限制是由浏览器导致）。</strong></li><li>对参数的数据类型，GET只接受ASCII字符，而POST没有限制。</li><li>GET参数通过URL传递，POST放在Request body中。</li></ul><h3 id="Fiddler"><a href="#Fiddler" class="headerlink" title="Fiddler"></a>Fiddler</h3><h4 id="删除请求"><a href="#删除请求" class="headerlink" title="删除请求"></a>删除请求</h4><ul><li>菜单删除</li><li>命令行删除：cls、clear</li><li>键盘delete</li><li>快捷键CTRL+x</li></ul><h4 id="过滤"><a href="#过滤" class="headerlink" title="过滤"></a>过滤</h4><ol><li><p>点击Filters页签，勾选“Use Filters”</p></li><li><p>Hosts下方的第二个下拉框，选择“Show Only the following Hosts”</p></li><li><p>在下方输入框中输入要抓包的主机地址（多个地址用英文分号隔开，如：localhost;127.0.0.1）</p></li><li><p>点击右上角的“Actions”,选择“Run  Filterset  Now”</p></li><li><p>如果取消过滤，去掉“Use Filters”的勾选</p></li></ol><h4 id="设置断点"><a href="#设置断点" class="headerlink" title="设置断点"></a>设置断点</h4><ul><li><p>修改请求</p><ol><li><p>进入添加会员的页面，填写正确的手机号码和其他信息</p></li><li><p>打开fiddler拦截开关：Rules ==》 Automatic Breakpoints ==》 Before Requests</p></li><li><p>回到添加会员界面，点击提交按钮</p></li></ol></li></ul><ol start="4"><li>回到Fiddler，修改【请求体】，如修改手机号码内容<ol start="5"><li>点击Fiddler中请求下方的绿色按钮“Run to Completion”</li><li>关闭Fiddler拦截开关：Rules ==》 Automatic Breakpoints ==》 Disabled</li></ol></li></ol><ul><li>修改响应（扩展）</li></ul><ul><li><ol><li>进入添加会员的页面，填写正确的手机号码和其他信息</li><li>打开fiddler拦截开关：Rules ==》 Automatic Breakpoints ==》 After Responses</li><li>回到添加会员界面，点击提交按钮</li><li>回到Fiddler，修改【响应体】，如修改【操作提示】的内容</li><li>点击Fiddler中请求下方的绿色按钮“Run to Completion”</li><li>关闭Fiddler拦截开关：Rules ==》 Automatic Breakpoints ==》 Disabled</li></ol></li></ul>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web测试 </tag>
            
            <tag> 功能测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>功能测试</title>
      <link href="/Zzhanp.github.io/2021/11/04/gong-neng-ce-shi/"/>
      <url>/Zzhanp.github.io/2021/11/04/gong-neng-ce-shi/</url>
      
        <content type="html"><![CDATA[<h1 id="功能测试"><a href="#功能测试" class="headerlink" title="功能测试"></a>功能测试</h1><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="按是否覆盖源代码"><a href="#按是否覆盖源代码" class="headerlink" title="按是否覆盖源代码"></a>按是否覆盖源代码</h3><p>黑盒：不关注代码逻辑，只关注输入输出。</p><p>白盒：关注代码逻辑。</p><p>灰盒测试：多用于集成测试阶段。</p><h3 id="按测试阶段"><a href="#按测试阶段" class="headerlink" title="按测试阶段"></a>按测试阶段</h3><p>单元测试：单个功能模块，对软件中最小可测单元进行检查和验证</p><p>集成测试：组装测试，组装成完整功能，将所有程序模块进行有序的、递增的测试，重点测试不同模块的接口部分。</p><p>系统测试：将整个软件系统看成一个整体进行测试，依据是软件需求说明书，软硬件</p><p>验收测试：检验软件是否符合用户需求的测试：α：内测 β：公测 γ：候选发布版本</p><h3 id="按是否运行"><a href="#按是否运行" class="headerlink" title="按是否运行"></a>按是否运行</h3><p>静态：不运行，界面或文档可能存在</p><p>动态：实际运行被测程序</p><h3 id="按是否自动化"><a href="#按是否自动化" class="headerlink" title="按是否自动化"></a>按是否自动化</h3><p>手工测试</p><p>自动化测试</p><h3 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h3><p>冒烟测试：针对最基本功能，保证基本的功能和流程能走通。</p><p>回归测试：修复一个bug后，把之前的测试用例在新的代码下再次测试。</p><p>随机测试：每个人不同的经验、角度。</p><p>探索测试：</p><h2 id="软件测试模型"><a href="#软件测试模型" class="headerlink" title="软件测试模型"></a>软件测试模型</h2><h3 id="瀑布模型"><a href="#瀑布模型" class="headerlink" title="瀑布模型"></a>瀑布模型</h3><p>职责明确，不响应需求的变化。应用于大型项目。</p><p>可研与计划－需求分析－概要设计－详细设计－编码－软件测试－运行维护</p><p>可研与计划：可行性研究报告</p><p>需求分析：需求规格说明书</p><p>概要设计：概要设计文档（架构师）</p><p>详细设计：详细设计文档（开发）</p><p>编码：敲代码</p><p>软件测试：测试报告</p><h3 id="V模型"><a href="#V模型" class="headerlink" title="V模型"></a>V模型</h3><p>需求分析-概要设计-详细设计-编码-单元测试-集成测试-系统测试-验收测试</p><p>测试的活动更多，并没有解决瀑布模型不响应需求变化的缺点。</p><h3 id="W模型"><a href="#W模型" class="headerlink" title="W模型"></a>W模型</h3><ul><li>开发V：需求分析-概要设计-详细设计-编码-<strong>集成-实施-交付</strong></li><li>缺点：技术和管理要求比较高</li><li>测试V：验收系统测试设计-集成测试设计-单元测试设计-单元测试-集成测试-系统测试-验收测试</li><li>测试参与了软件开发全生命周期</li></ul><h2 id="软件质量模型"><a href="#软件质量模型" class="headerlink" title="软件质量模型"></a>软件质量模型</h2><p>功能性：检察业务功能是否满足需求</p><p>可靠性：容错性能、纠错能力</p><p>易用性：易读易懂</p><p>效率：性能（响应时间、消耗的资源）</p><p>可维护性：为后续功能的开发与维护提供便利</p><p>可移植性：不同的软件环境和硬件环境</p><h2 id="测试用例"><a href="#测试用例" class="headerlink" title="测试用例"></a>测试用例</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>一个为了特定目的（验证产品的功能实现是否满足用户需求）而设计的的包含（测试输入、执行条件、预期结果）的文档。</p><h3 id="好处"><a href="#好处" class="headerlink" title="好处"></a>好处</h3><ul><li>便于理清测试思路，确保需覆盖测试的功能点无遗漏。</li><li>便于测试工作量的评估</li><li>便于提前准备测试数据</li><li>便于把控测试工作进度</li><li>便于回归测试</li><li>便于测试工作的组织，提高测试效率，降低测试交接成本</li></ul><h3 id="组成要素"><a href="#组成要素" class="headerlink" title="组成要素"></a>组成要素</h3><ul><li>用例编号</li><li>用例标题</li><li>测试项目</li><li>用例级别</li><li>预置条件</li><li>测试输入</li><li>执行步骤</li><li>预期结果</li></ul><h2 id="等价类划分法"><a href="#等价类划分法" class="headerlink" title="等价类划分法"></a>等价类划分法</h2><h3 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h3><p>在所有测试数据中，具有某种共同特征的数据子集。</p><h3 id="划分"><a href="#划分" class="headerlink" title="划分"></a>划分</h3><p>满足要求：有效等价类</p><p>不满足要求：无效等价类</p><h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><p><strong>有大量数据测试输入，但是没法穷举测试。</strong>如输入框、下拉列表、单选复选框，需要同时提交，对于每种输入都需要大量测试输入验证</p><p>典型代表：<strong>页面级的输入框类测试</strong></p><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ol><li><p><strong>需求分析</strong></p></li><li><p><strong>划分等价类：</strong></p><ul><li><p>有效：满足所有需求</p></li><li><p>无效：<strong>规则（需求）、长度、类型、是否为空（必填项）、是否重复</strong>。只要一项不满足即可。</p></li></ul></li><li><p><strong>设计测试用例</strong></p></li></ol><h3 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h3><p>一、QQ账号：</p><p>需求分析：6-10位自然数</p><p>长度：6-10位</p><p>类型：自然数</p><p><strong>划分等价类：</strong></p><p>有效等价类：6-10位自然数，有效数据：123456</p><p>无效等价类：</p><p>长度：小于5位、大于10位</p><p>类型：非自然数，包含字母、符号、中文、空格，空</p><p>二、电话号码：</p><p><strong>需求分析：</strong>验证某城市电话号码正确性</p><p>区号：空或三位数字</p><p>前缀码：非0且非1开头的三位数字</p><p>后缀码：四位数字</p><p><strong>有效等价类：</strong></p><p><strong>无效等价类：</strong></p><p>三、新浪邮箱登录</p><p><strong>需求分析：</strong></p><p>测试目的：邮箱能否登录</p><p>测试条件：</p><p>邮箱名：4-16位字符，支持英文、数字、下划线（不能全是数字或者下划线）</p><p>密码：6-18位字符</p><p><strong>有效等价类：</strong></p><p><strong>无效等价类：</strong></p><p>挑一个最小的一个最大的</p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>单模块测试中，用例标题具有唯一性。</p><p>必要步骤尽可能清楚。</p><h2 id="边界值分析法"><a href="#边界值分析法" class="headerlink" title="边界值分析法"></a>边界值分析法</h2><h3 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h3><p>开发人员常常在边界的位置容易出现问题，因此需要针对边界位置再测试。</p><p>对于等价类划分法的完善和补充。</p><p><strong>针对有边界范围的批量数据的输入类测试（重点关注边界）</strong></p><p><strong>典型代表：输入框（有边界范围区间）</strong></p><h3 id="边界范围确定"><a href="#边界范围确定" class="headerlink" title="边界范围确定"></a>边界范围确定</h3><p>选取正好等于、刚好大于、刚好小于边界的值作为测试数据。</p><ul><li>上点：边界上的点（正好等于）</li><li>离点：距离上点最近的点（刚好大于、刚好小于）</li><li>内点：范围内的点（区间范围内的点）</li></ul><h3 id="步骤-1"><a href="#步骤-1" class="headerlink" title="步骤"></a>步骤</h3><p>明确需求：测试目的、测试条件</p><p>划分等价类：有效等价类、无效等价类</p><p>确认边界范围值：上点、离点（可以优化）、内点（可以和有效等价类的取值合并）</p><p>提取数据编写用例：</p><p><strong>上点需要单独列出。</strong></p><h3 id="边界取值优化"><a href="#边界取值优化" class="headerlink" title="边界取值优化"></a>边界取值优化</h3><p>内点：必选（建议选择中间范围）</p><p>上点：必须选</p><p>离点：可以优化，取和上点取值相反的取值点即可（上点有效，离点选无效 ）</p><h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><p>一、QQ</p><p>上点：6 位、10位</p><p>离点：5位、11位</p><p>内点：8位</p><p>二、标题长度</p><p>标题长度大于0，小于等于30个字符。</p><p>边界值：</p><p>上点：0个、30个</p><p>离点：1个，31个</p><p>内点：15个</p><p>三、邮箱登录</p><p>邮箱名边界值：</p><p>上点：4，16</p><p>离点：3，17</p><p>内点：10</p><p>密码边界值：</p><p>上点：6，18</p><p>离点：5，19</p><p>内点：12</p><h2 id="判定表法"><a href="#判定表法" class="headerlink" title="判定表法"></a>判定表法</h2><h3 id="案例-1"><a href="#案例-1" class="headerlink" title="案例"></a>案例</h3><p>若用户欠费或者关机，则不允许主被叫</p><h3 id="适用场景"><a href="#适用场景" class="headerlink" title="适用场景"></a>适用场景</h3><p>有多个输入条件，多个输出结果，输入条件之间有组合关系，输入条件和输出结果之间有依赖（制约）关系。</p><p><strong>常见词汇：如果…那么…</strong></p><p>局限性：判定表一般适用于条件组合数量较少的情况。</p><h3 id="判定表构成"><a href="#判定表构成" class="headerlink" title="判定表构成"></a>判定表构成</h3><p>条件桩：列出问题中所有条件。</p><p>动作桩：列出问题中可能采取的操作。</p><p>条件项：列出条件的对应取值。</p><p>动作项：列出条件项的各种取值情况下应该采取的动作结果。</p><p><strong>规则：判定表中贯穿条件项和动作项的一列就是一条规则。</strong></p><h3 id="步骤-2"><a href="#步骤-2" class="headerlink" title="步骤"></a>步骤</h3><p>明确需求</p><p>画出判定表：</p><ul><li>列出条件桩和动作桩</li><li>填写条件项，对条件进行全组合</li><li>根据条件项的组合确定动作项</li><li>简化、合并相似规则（有相同的动作）</li></ul><p>根据规则编写测试用例</p><h3 id="案例-2"><a href="#案例-2" class="headerlink" title="案例"></a>案例</h3><p>一、订购单检查</p><p><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/image-20211024000021774.png" alt="image-20211024000021774"></p><p>二、文件修改</p><p>如想对文件进行修改，需要遵守以下规则： 输入的第一列字符必须是A或B，第二列字符必须是一个数字， 如果第一列字符不正确，则给出信息L； 如果第二列字符不正确，则给出信息M。 如果两列字符输入正确，则修改文件成功， 如果两列字符都输入错误，则给出信息L、M。</p><h2 id="因果图"><a href="#因果图" class="headerlink" title="因果图"></a>因果图</h2><h2 id="正交法"><a href="#正交法" class="headerlink" title="正交法"></a>正交法</h2><h2 id="场景法"><a href="#场景法" class="headerlink" title="场景法"></a>场景法</h2><p>也叫流程图法，是用流程图描述用户的使用场景，然后通过覆盖路程路径来设计测试用例。</p><h3 id="意义"><a href="#意义" class="headerlink" title="意义"></a>意义</h3><p>用户使用角度：用户平时使用的不是单个功能，而是多个功能组合起来进行使用。</p><p>测试人员角度：平时测试的都是单个功能点，容易忽略多个功能的组合测试。</p><h3 id="适用场景-1"><a href="#适用场景-1" class="headerlink" title="适用场景"></a>适用场景</h3><p>根据实际的应用场景，对于多个功能之间的组合测试，可以使用场景法。</p><p>一般在测试的后期，对整个系统的模块功能进行全部的<strong>组合测试</strong>。</p><p>步骤：</p><ul><li>需求分析</li><li>绘制流程图</li><li>设计测试用例</li></ul><h2 id="错误推测法"><a href="#错误推测法" class="headerlink" title="错误推测法"></a>错误推测法</h2><p>要求：有<strong>实际项目测试经验</strong>的人使用。</p><p>定义：通过<strong>直觉（经验）</strong>或者智慧推测系统可能出现问题的地方进行再次测试。</p><h3 id="适用场景-2"><a href="#适用场景-2" class="headerlink" title="适用场景"></a>适用场景</h3><p>1.时间紧迫：通过以往类似项目的经验，提取当前项目中核心模块（出现问题较多）进行再次测试。</p><p>2.时间宽裕：在基础测试的基础上，将原有模块（存在问题较多）进行再次细化测试。</p><h2 id="状态迁移法"><a href="#状态迁移法" class="headerlink" title="状态迁移法"></a>状态迁移法</h2><p>是一种基于产品规格分析，对系统的每个状态及与状态相关的功能进行测试，通过不同的状态验证程序的逻辑流程。</p><p>适用场景：</p><ul><li>在业务流程中涉及到了复杂的业务场景（即业务状态的迁移）。</li><li>这些业务场景在需求规格说明书中往往不能够完全阐述清楚，容易出现遗漏。</li></ul><h3 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h3><ol><li>明确状态节点：分析被测试对象的需求规格说明，明确被测对象的状态节点数量。</li><li>绘制状态迁移图：利用圆圈表示状态节点，有向箭头表示状态间的迁移关系。</li><li>绘制状态迁移树：根据状态迁移图的节点和箭头绘制状态迁移树</li><li>抽取测试路径设计用例：根据迁移树抽取测试路径，从左至右，横向抽取，每条路径构成一条测试规则。</li></ol><h3 id="案例分析1–飞机售票系统"><a href="#案例分析1–飞机售票系统" class="headerlink" title="案例分析1–飞机售票系统"></a>案例分析1–飞机售票系统</h3><p><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/image-20211030161120223.png" alt="image-20211030161120223"></p><ol><li>明确状态节点：预定、已支付、已出票、已使用、已取消</li><li>绘制状态迁移图</li><li>绘制状态迁移树</li><li>设计用例</li></ol><h3 id="案例分析2–下单流程"><a href="#案例分析2–下单流程" class="headerlink" title="案例分析2–下单流程"></a>案例分析2–下单流程</h3><p><img src="/Zzhanp.github.io//zhangzhanpeng.top/2021/11/04/gong-neng-ce-shi/Users/lenovo/AppData/Roaming/Typora/typora-user-images/image-20211030210601131.png" alt="image-20211030210601131"></p><p>状态节点：</p><p>等待付款、待发货、待收货、待评价、已完成、已取消、已作废</p><p>路径：</p><p><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/image-20211030211710878.png" alt="image-20211030211710878"></p><h2 id="业务流程测试"><a href="#业务流程测试" class="headerlink" title="业务流程测试"></a>业务流程测试</h2><h3 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h3><ul><li>椭圆：开始/结束</li><li>箭头：路径、流程的走向</li><li>平行四边形：数据的输入/输出</li><li>矩形：处理/步骤/过程</li><li>菱形：判断</li></ul><p>绘制原则：</p><ul><li>流程正确，不能遗漏路径</li><li>先判定，再有判断结果</li><li>主流程保持在流程图的中间位置，方便阅读</li></ul><h3 id="业务流程测试-1"><a href="#业务流程测试-1" class="headerlink" title="业务流程测试"></a>业务流程测试</h3><ul><li>关注点在核心业务是否能够跑通</li><li>重点不是关注单个功能模块的细节点</li></ul><p>测试时机：</p><ul><li>上线前进行业务流程测试的确认</li><li>单功能模块基本可用的情况下，尽早进行（冒烟测试）</li></ul><h3 id="用例设计"><a href="#用例设计" class="headerlink" title="用例设计"></a>用例设计</h3><ul><li>需求分析，明确流程</li><li>画出流程图</li><li>编写测试用例</li></ul><h3 id="案例1–TPshop业务流程"><a href="#案例1–TPshop业务流程" class="headerlink" title="案例1–TPshop业务流程"></a>案例1–TPshop业务流程</h3><h2 id="测试用例设计总结"><a href="#测试用例设计总结" class="headerlink" title="测试用例设计总结"></a>测试用例设计总结</h2><p>等价类：具有输入功能，但输入之间没有组合关系</p><p>边界值：输入有边界，如长度、类型</p><p>判定表、因果图：多输入、多输出、输入与输入之间存在组合关系、输入与输出之间存在依赖或制约关系</p><p>正交法：用最少的测试用例获得最大测试覆盖率</p><p>场景法、流程图：多个功能的组合测试</p><p>错误推测法：最后使用来进一步补充测试用例</p><h2 id="软件缺陷"><a href="#软件缺陷" class="headerlink" title="软件缺陷"></a>软件缺陷</h2><p>定义：软件在使用过程中存在的任何问题，都叫软件的缺陷，简称bug。（依据：需求说明书）</p><h3 id="判定标准"><a href="#判定标准" class="headerlink" title="判定标准"></a>判定标准</h3><ul><li><p>软件未实现需求说明书中明确要求的功能–中高级（没有做）</p></li><li><p>软件出现了需求说明书中指明不应该出现的错误–中高级（做错了）</p></li><li><p>软件实现的功能超出需求说明书指明的范围（做多了）</p></li><li><p>软件未实现需求说明书中虽未明确指明但应该实现的要求（没做好）</p><!--一般指国际/国家/行业/企业标准规范或者法规的要求--></li><li><p>软件难以理解，不易使用，运行缓慢，用户体验不好。（不完美）（优先级较低）</p></li></ul><h3 id="产生原因"><a href="#产生原因" class="headerlink" title="产生原因"></a>产生原因</h3><ul><li>需求阶段：需求描述不易理解，有歧义、错误等。</li><li>设计阶段：设计文档存在错误或者缺陷。</li><li>编码阶段：代码出现错误。</li><li>运行系统：软硬件系统本身故障导致软件缺陷。</li></ul><h3 id="软件缺陷核心内容"><a href="#软件缺陷核心内容" class="headerlink" title="软件缺陷核心内容"></a>软件缺陷核心内容</h3><ul><li>缺陷的标题——描述缺陷的核心问题</li><li>缺陷的预置条件——缺陷产生的前体</li><li>缺陷的复现步骤——复现缺陷的过程</li><li>缺陷的预期结果——希望得到的结果</li><li>缺陷的实际结果——实际得到的结果</li><li>缺陷的必要附件——图片、日志等信息</li></ul><h3 id="缺陷报告的其他要素"><a href="#缺陷报告的其他要素" class="headerlink" title="缺陷报告的其他要素"></a>缺陷报告的其他要素</h3><ul><li>缺陷的编号”能够唯一的表示一个缺陷</li><li>缺陷的状态：描述缺陷生命周期的过程<ul><li><strong>新建（new）</strong></li><li>打开（open）：表示开发确认通过</li><li>拒绝（rejected）：表示开发确认不通过</li><li>进行中（inprogress）：表示开发正在修复缺陷</li><li><strong>已修复（fixed）</strong>：回归测试</li><li>延迟修复（delay/postpone）</li><li><strong>测试通过（closed）</strong></li><li><strong>测试不通过（reopen/open）</strong></li></ul></li><li>缺陷的所属模块：描述缺陷产生的模块范围</li><li><strong>优先级：</strong>依据：1.测试用例优先级2.产品经理定的标准</li><li><strong>严重级</strong></li><li>缺陷的类型：<ul><li>功能问题</li><li>UI</li><li>兼容性</li><li>易用性</li><li>架构</li><li>安全性</li></ul></li></ul><h3 id="缺陷管理"><a href="#缺陷管理" class="headerlink" title="缺陷管理"></a>缺陷管理</h3><p>跟踪流程</p><h4 id="编写缺陷报告规范"><a href="#编写缺陷报告规范" class="headerlink" title="编写缺陷报告规范"></a>编写缺陷报告规范</h4><ul><li>可复现</li><li>唯一性</li><li>规范性：遵循公司规定的报bug的要求</li></ul><p>注意事项：</p><ul><li>确保上报的bug是准确的</li><li>描述尽可能简洁易懂</li><li>不能使用感情色彩的词语</li><li>不能使用模棱两可的词汇</li><li>不能使用人称代词</li></ul><h3 id="面试题"><a href="#面试题" class="headerlink" title="面试题"></a>面试题</h3><p>在实际测试中出现不可复现的bug怎么办？</p><pre class=" language-yacas"><code class="language-yacas">1.经过多次复现后，还是没有出现，此时在本地记录当前问题2.回顾当时操作的流程及测试环境的配置要求，确认是否是由于操作失误或环境临时故障引起3.请开发协助查找当前测试模块是否有对应的日志信息4.考虑更换一套环境查看是否能够复现上述问题5.在后续版本测试中，需要关注当时测试该功能时是否还出现上述的问题6.在后续版本还出现过，需要开发协助打印日志进行分析定位，同时测试需要提交bug</code></pre><h2 id="禅道"><a href="#禅道" class="headerlink" title="禅道"></a>禅道</h2><h3 id="使用流程"><a href="#使用流程" class="headerlink" title="使用流程"></a>使用流程</h3><p>管理用例</p><ul><li>创建用例：将需求文档直接转换为可测试的功能点的过程</li><li>评审用例：查看已经编写好的用例是否有错误、遗漏、不正确的地方 进行评估的过程</li><li>执行用例</li></ul><p>管理缺陷</p><ul><li>缺陷的创建</li><li>缺陷的跟踪</li><li>缺陷的验证</li></ul><h2 id="非功能测试"><a href="#非功能测试" class="headerlink" title="非功能测试"></a>非功能测试</h2><p>基本测试策略：</p><ul><li>冒烟测试：基本功能检查、核心业务流程测试</li><li>单功能测试</li><li>集成测试与回归</li><li>系统测试与回归</li><li>验收测试与回归</li></ul><h3 id="兼容性测试"><a href="#兼容性测试" class="headerlink" title="兼容性测试"></a>兼容性测试</h3><p>概念：不同平台、系统都能正常工作</p><p>测试关注点（Web）：</p><ul><li>浏览器：IE、Chrome、FireFox</li><li>操作系统：Windows、Linux、mac等</li><li>网络</li><li>分辨率</li></ul><h3 id="界面测试"><a href="#界面测试" class="headerlink" title="界面测试"></a>界面测试</h3><p>测试用户界面的功能模块的布局是否合理、整体风格是否一致、各个控件是否符合客户使用习惯</p><ul><li>布局</li><li>风格</li><li>按钮</li><li>测试基本原则：参照UI设计图</li><li>若无原型图：<ul><li>导航测试</li><li>图形测试</li><li>内容测试（有无错别字）</li><li>整体界面风格测试</li></ul></li></ul><h3 id="易用性"><a href="#易用性" class="headerlink" title="易用性"></a>易用性</h3><p>易懂、易学</p><p>关注点：</p><ul><li>用户群体</li><li>计算机水平</li><li>项目复杂性</li></ul><h3 id="性能测试"><a href="#性能测试" class="headerlink" title="性能测试"></a>性能测试</h3><p>什么时候考虑：</p><ul><li>对性能有要求</li><li>用户量大</li></ul><p>目的：</p><p>验证稳定性、验证是否达到性能目标</p><p>并发测试、压力测试、负载测试</p><h3 id="安全性"><a href="#安全性" class="headerlink" title="安全性"></a>安全性</h3><p>关注点：</p><p>输入数据：登录时密码是否进行加密以及密码是否容易破解，敏感信息遮挡处理，不能复制</p><p>传输数据：加密要有复杂度</p><p>输出数据：数据库中敏感信息要加密</p>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 功能测试 </tag>
            
            <tag> 测试理论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络体系结构</title>
      <link href="/Zzhanp.github.io/2021/11/03/ji-suan-ji-wang-luo-ti-xi-jie-gou/"/>
      <url>/Zzhanp.github.io/2021/11/03/ji-suan-ji-wang-luo-ti-xi-jie-gou/</url>
      
        <content type="html"><![CDATA[<h1 id="计算机网络体系结构"><a href="#计算机网络体系结构" class="headerlink" title="计算机网络体系结构"></a>计算机网络体系结构</h1><h2 id="因特网概述"><a href="#因特网概述" class="headerlink" title="因特网概述"></a>因特网概述</h2><p>网络由若干结点和连接这些结点的链路组成。</p><p>internet（互联网或互联网）：通用名词，泛指由多个计算机网络互连而成的网络。在这些网络之间的通信协议可以是任意的。</p><p>Internet（专有名词）：指全球最大的、开放的、由众多网络相互连接而成的特定计算机网络，采用TCP/IP协议作为通信的规则，前身是美国的ARPANET。</p><h3 id="因特网发展的三个阶段"><a href="#因特网发展的三个阶段" class="headerlink" title="因特网发展的三个阶段"></a>因特网发展的三个阶段</h3><p> 单个网络ARPANET向互联网发展-&gt;逐步建成三级结构的因特网-&gt;逐步形成了多层次ISP结构的因特网</p><p>1969年，第一个分组交换网ARPANET。</p><h3 id="ISP"><a href="#ISP" class="headerlink" title="ISP"></a>ISP</h3><p>个人通过ISP接入到因特网</p><p>主干ISP：因特网主干网，直接互联</p><p>地区ISP：区域性或国家性覆盖规模</p><p>本地ISP：校园网、企业网、移动用户</p><p>相隔较远的两台主机通信：主机A-&gt;本地ISP-&gt;地区ISP-&gt; 主干ISP-&gt; 地区ISP-&gt;本地ISP-&gt;主机B</p><h3 id="因特网标准化工作"><a href="#因特网标准化工作" class="headerlink" title="因特网标准化工作"></a>因特网标准化工作</h3><p>RFC</p><h3 id="因特网的组成"><a href="#因特网的组成" class="headerlink" title="因特网的组成"></a>因特网的组成</h3><p>边缘部分：由所有连接在因特网上的<strong>主机</strong>组成。用户直接使用，用来<strong>通信（传送数据、音频或视频）和资源共享</strong>。</p><p>核心部分：由<strong>大量网络</strong>和连接这些网络的<strong>路由器</strong>组成。为边缘部分提供服务（提供连通性和交换）。</p><h2 id="三种交换方式"><a href="#三种交换方式" class="headerlink" title="三种交换方式"></a>三种交换方式</h2><h3 id="电路交换"><a href="#电路交换" class="headerlink" title="电路交换"></a>电路交换</h3><p>前提：所有电话机两两相连接不现实。</p><p>定义：电话交换机接通电话线的方式。</p><p>步骤：</p><ol><li>建立连接（分配通信资源）</li><li>通话（一直占用通信资源）</li><li>释放连接（归还通信资源）</li></ol><p>电路交换传送计算机数据时，线路传输效率低</p><h3 id="分组交换（重点）"><a href="#分组交换（重点）" class="headerlink" title="分组交换（重点）"></a>分组交换（重点）</h3><p>发送方：构造分组、发送分组</p><p>路由器：存储转发</p><p>接收方：接收分组、还原报文</p><h3 id="报文交换"><a href="#报文交换" class="headerlink" title="报文交换"></a>报文交换</h3><p>对报文大小无限制，交换结点需要有较大缓存空间，用于早期电报。</p><h3 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h3><p>分组交换：随时发送分组，不需要事先建立连接。分组在交换机进行存储转发，减少了转发时延，避免过长的报文长时间占用链路，同时有利于进行差错控制。</p><p>电路交换：比特流直达终点。</p><p>报文交换：报文需要在各节点交换机进行存储转发。</p><h4 id="电路交换优点"><a href="#电路交换优点" class="headerlink" title="电路交换优点"></a>电路交换优点</h4><ul><li>数据直达，通信时延小</li><li>有序传输</li><li>没有冲突</li><li>适用范围广（既适用于传输数字信号，也可模拟信号）</li><li>实时性强</li><li>控制简单</li></ul><h4 id="电路交换缺点"><a href="#电路交换缺点" class="headerlink" title="电路交换缺点"></a>电路交换缺点</h4><ul><li>建立连接时间长</li><li>线路独占，使用效率低</li><li>灵活性差，任何一点出现故障，需要重新连接</li><li>难以规格化</li></ul><h4 id="报文交换优点"><a href="#报文交换优点" class="headerlink" title="报文交换优点"></a>报文交换优点</h4><ul><li>无需建立连接</li><li>动态分配线路</li><li>提高线路可靠性，某条路故障，选择另一条路</li><li>提高线路利用率</li><li>提供多目标服务，同时发给多个目标地址</li></ul><h4 id="报文交换缺点"><a href="#报文交换缺点" class="headerlink" title="报文交换缺点"></a>报文交换缺点</h4><ul><li>引起了转发时延</li><li>需要较大存储缓存空间</li><li>需要传输额外信息量</li></ul><h4 id="分组交换优点"><a href="#分组交换优点" class="headerlink" title="分组交换优点"></a>分组交换优点</h4><ul><li>无需建立连接</li><li>线路利用率高</li><li>简化了存储管理</li><li>加速传输，后一个的存储和前一个的转发可以同时进行</li><li>减少出错概率和重发数据量</li></ul><h4 id="分组交换缺点"><a href="#分组交换缺点" class="headerlink" title="分组交换缺点"></a>分组交换缺点</h4><ul><li>引起了转发时延</li><li>需要传输额外的信息量</li><li>对于数据报服务，存在丢序、丢失或重复分组的问题；对于虚电路服务，存在呼叫建立、数据传输和虚电路释放三个过程</li></ul><h2 id="计算机网络的定义和分类"><a href="#计算机网络的定义和分类" class="headerlink" title="计算机网络的定义和分类"></a>计算机网络的定义和分类</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>一些互相连接的、自治的计算机的集合</p><p>自治：独立的计算机，有自己的硬件和软件，可以单独运行使用。</p><p>计算机网络并非专门用来传输数据，而是能够支持很多种应用。</p><h3 id="分类（重点）"><a href="#分类（重点）" class="headerlink" title="分类（重点）"></a>分类（重点）</h3><h4 id="按交换技术"><a href="#按交换技术" class="headerlink" title="按交换技术"></a>按交换技术</h4><p>电路交换网络、报文交换网络、分组交换网络</p><h4 id="按使用者"><a href="#按使用者" class="headerlink" title="按使用者"></a>按使用者</h4><p>公用网、专用网</p><h4 id="按传输介质"><a href="#按传输介质" class="headerlink" title="按传输介质"></a>按传输介质</h4><p>有线网络、无线网络</p><h4 id="按覆盖范围"><a href="#按覆盖范围" class="headerlink" title="按覆盖范围"></a>按覆盖范围</h4><p><strong>广域网WAN</strong>：几十公里到几千公里，远程网。</p><p>城域网MAN：范围一个城市。</p><p><strong>局域网LAN</strong>：微型计算机或工作站通过高速通信线路相连（10Mb/s以上），校园网、企业网。</p><p><strong>个域网PAN</strong>：10米，个人设备用无线技术连起来的网络，无线个人区域网WPAN。</p><h4 id="按拓扑结构"><a href="#按拓扑结构" class="headerlink" title="按拓扑结构"></a>按拓扑结构</h4><p>总线型：</p><p>星型：成本高，中央设备对故障敏感</p><p>环型：单向传输</p><p>网状型：可靠性高，线路复杂、成本高</p><h2 id="计算机网络的性能指标"><a href="#计算机网络的性能指标" class="headerlink" title="计算机网络的性能指标"></a>计算机网络的性能指标</h2><h3 id="速率"><a href="#速率" class="headerlink" title="速率"></a>速率</h3><p>连接在计算机网络上的主机在数字信道上传送比特的速率，也称为<strong>比特率或数据率</strong>。</p><pre class=" language-yacas"><code class="language-yacas">比特，数据量的单位，1 Byte = 8 bit常用数据率单位：bit/s(b/s,bps)</code></pre><h3 id="带宽（重点）"><a href="#带宽（重点）" class="headerlink" title="带宽（重点）"></a>带宽（重点）</h3><p>表示网络的通信线路所能传送数据的能力，网络带宽表示在单位时间内从网络的某一点到另一点所能通过的<strong>“最高数据率”</strong>。单位b/s，如家里的网为200M，即200Mb/s。</p><h3 id="吞吐量"><a href="#吞吐量" class="headerlink" title="吞吐量"></a>吞吐量</h3><p>表示在<strong>单位时间内通过某个网络（或信道、接口）的数据量。受网络的带宽或额定速率的限制。</strong></p><h3 id="时延（重点）"><a href="#时延（重点）" class="headerlink" title="时延（重点）"></a>时延（重点）</h3><p>发送时延：源主机将分组发往传输线路，分组长度(b)/发送速率(b/s)，发送速率由网卡的发送速率、信道带宽、交换机的接口速率决定。</p><p>传播时延：电信号在链路传输，信道长度(m)/电磁波传播速率(m/s)，电磁波在铜线传播约为2.3x10^8 m/s，光纤约为2.0x10^8 m/s。</p><p>处理时延：路由器收到分组后对其进行存储转发。</p><h3 id="时延带宽积"><a href="#时延带宽积" class="headerlink" title="时延带宽积"></a>时延带宽积</h3><p><strong>指传播时延x带宽</strong>，以比特为单位的链路长度。</p><h3 id="往返时间"><a href="#往返时间" class="headerlink" title="往返时间"></a>往返时间</h3><p>RTT：卫星网络耗时较多</p><h3 id="利用率（重点）"><a href="#利用率（重点）" class="headerlink" title="利用率（重点）"></a>利用率（重点）</h3><p>信道利用率：表示某信道有百分之几的时间是被利用的（有数据通过），并非越高越好。</p><p>网络利用率：全网络的信道利用率的加权平均</p><p>当网络的利用率达到50%时，时延就要加倍。D=D0/(1-U).</p><p>也不能使利用率太低，白白浪费通信资源。动态调整。</p><h3 id="丢包率"><a href="#丢包率" class="headerlink" title="丢包率"></a>丢包率</h3><p>分组丢失率，<strong>丢失的分组数量与总分组数量的比率</strong>。</p><p>分组在传输过程中出现<strong>误码</strong>，被结点丢弃。</p><p>分组到达一台队列已满的分组交换机时被丢弃，在数据量较大时可能造成<strong>网络拥塞</strong>。</p><p>反映了网络的拥塞情况。</p><h2 id="计算机网络体系结构（重点）"><a href="#计算机网络体系结构（重点）" class="headerlink" title="计算机网络体系结构（重点）"></a>计算机网络体系结构（重点）</h2><h3 id="常见的计算机网络体系结构"><a href="#常见的计算机网络体系结构" class="headerlink" title="常见的计算机网络体系结构"></a>常见的计算机网络体系结构</h3><h4 id="OSI体系结构"><a href="#OSI体系结构" class="headerlink" title="OSI体系结构"></a>OSI体系结构</h4><p>法律上的国际标准</p><ul><li>应用层</li><li>表示层</li><li>会话层</li><li>运输层</li><li>网络层</li><li>数据链路层</li><li>物理层</li></ul><p>失败原因：</p><p>1、OSI专家缺乏实际经验，OSI标准没有商业驱动力</p><p>2、OSI协议实现起来很复杂，且效率低</p><p>3、OSI标准制定周期太长，按OSI标准生产的设备无法及时进入市场</p><p>4、OSI层次划分不太合理，有些功能在多个层次重复出现</p><h4 id="TCP-IP体系结构"><a href="#TCP-IP体系结构" class="headerlink" title="TCP/IP体系结构"></a>TCP/IP体系结构</h4><p>事实上的国际标准</p><ul><li>应用层：HTTP、SMTP、DNS、RTP</li><li>运输层：TCP、UDP</li><li>网际层：IP</li><li>网络接口层</li></ul><p>合并OSI物理层和数据链路层为网咯接口层，去掉了OSI的会话层和表示层。</p><p>路由器一般只包含网络接口层和网际层。</p><p>网络接口层并没有规定具体内容，因此TCP/IP只有上面三层。</p><p>使用IP协议互联不同的网络接口（IP over everything），同时可以为各种网络应用提供服务（everything over IP）。</p><h4 id="五层协议体系结构"><a href="#五层协议体系结构" class="headerlink" title="五层协议体系结构"></a>五层协议体系结构</h4><ul><li>应用层</li><li>运输层</li><li>网络层</li><li>数据链路层</li><li>物理层</li></ul><h3 id="分层的必要性"><a href="#分层的必要性" class="headerlink" title="分层的必要性"></a>分层的必要性</h3><p>计算机网络是个非常复杂的系统</p><p>分层可将庞大而复杂的问题，转化为若干较小的局部问题。</p><p>物理层：解决使用何种信号来传输比特的问题</p><p>数据链路层：解决分组在一个网络（或一段链路）上传输的问题</p><p>网络层：解决分组在多个网络上传输（路由）的问题</p><p>运输层：解决进程之间基于网络的通信问题</p><p>应用层：解决通过应用进程的交互来实现特定网络应用的问题</p><h3 id="专用术语"><a href="#专用术语" class="headerlink" title="专用术语"></a>专用术语</h3><p>实体：任何可发送或接收信息的硬件或软件进程。</p><p>协议：控制两个对等实体进行<strong>逻辑通信</strong>的规则的集合。</p><p>协议的三要素：</p><p>语法：定义所交换信息的格式</p><p>语义：定义收发双方所要完成的操作</p><p>同步：定义收发双方的时序关系</p><p>在协议的控制下，两个对等实体间的逻辑通信使得本层能够向上一层提供服务。</p><p>要实现本层协议，还需要使用下面一层所提供的服务。</p><p><strong>协议是水平的，服务是垂直的。</strong></p><p>实体看得见相邻下层所提供的服务，但并不知道实现该服务的具体协议，下面的协议对上面的实体是<strong>“透明”</strong>的。</p><p>协议数据单元PDU：<strong>对等层次之间传送的数据包</strong>称为该层的协议数据单元。</p><p>服务数据单元SDU：<strong>同一系统内，层与层之间交换的数据包</strong>称为服务数据单元。</p><h2 id="习题"><a href="#习题" class="headerlink" title="习题"></a>习题</h2><p>1、在OSI参考模型中，自下而上第一个提供端到端服务的层次是：传输层</p><pre class=" language-yacas"><code class="language-yacas">传输层：解决进程之间基于网络的通信问题，提供端到端的逻辑通信传输层使用端口号为应用层的应用进程之间提供端到端的逻辑通信，而网络层仅仅为主机之间提供逻辑通信</code></pre><p>2、TCP/IP参考模型的网络层提供的是：无连接不可靠的数据报服务</p><p>3、在TCP/IP体系结构中，直接为ICMP提供服务的协议是：IP</p><p>4、在OSI参考模型中，下列功能需由应用层的相邻层实现的是：数据格式转换</p><p>5、时延：</p><p><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/image-20211026202718538.png" alt="image-20211026202718538"></p><p><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/image-20211026211812041.png" alt="image-20211026211812041" style="zoom:150%;"></p><p><strong>n个发送时延+1个传播时延</strong></p><p><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/image-20211026212155919.png" alt="image-20211026212155919"></p><p><strong>n个分组，m段链路，总时延：</strong></p><ul><li><strong>n个分组的发送时延</strong></li><li><strong>1个分组的发送时延 x (m-1)</strong></li><li><strong>1段链路的传播时延 x m</strong></li></ul><p>6、</p><p><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/image-20211026212517241.png" alt="image-20211026212517241"></p><p>7、</p><p><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/image-20211026214322285.png" alt="image-20211026214322285"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入</title>
      <link href="/Zzhanp.github.io/2021/03/25/sql-zhu-ru/"/>
      <url>/Zzhanp.github.io/2021/03/25/sql-zhu-ru/</url>
      
        <content type="html"><![CDATA[<h1 id="SQL注入学习"><a href="#SQL注入学习" class="headerlink" title="SQL注入学习"></a>SQL注入学习</h1><p>接触安全这么久了，却连最基本的注入都还不会。。。令人汗颜。从这个笔记开始，好好学习注入，好好学习安全！本文借助sqli-labs来进行训练。</p><h2 id="联合查询注入过程"><a href="#联合查询注入过程" class="headerlink" title="联合查询注入过程"></a>联合查询注入过程</h2><p>1、判断注入点</p><p>2、判断是整型还是字符型</p><p>3、判断查询列数</p><p>4、判断显示位</p><p>5、获取所有数据库名</p><p>6、获取数据库所有表名</p><p>7、获取字段名</p><p>8、获取字段中的数据</p><p>常用闭合语句：</p><p>?id=1’#</p><p>?id=1#</p><p>?id=1’)#</p><p>?id=1’))#</p><h3 id="判断注入点"><a href="#判断注入点" class="headerlink" title="判断注入点"></a>判断注入点</h3><p><strong>当输入的参数为字符串时，并且存在注入，可称为字符型注入，字符型和数值型的区别在于数值不需要单引号闭合，而字符型都需要单引号闭合。</strong></p><h3 id="判断整型还是字符型"><a href="#判断整型还是字符型" class="headerlink" title="判断整型还是字符型"></a>判断整型还是字符型</h3><p>数字型通常sql语句为：</p><p><code>select * from users where id =x</code></p><p>这种类型可以使用经典的and 1=1 and 1=2来判断</p><p>url地址中输入<code>www.xxxx.com/ccc.php?id=x and 1=1</code><br> 页面显示正常，继续下一步</p><p>url地址中输入<code>www.xxxx.com/ccc.php?id=x and 1=2</code><br> 页面错误，这说明存在数字型注入。</p><p>原因如下：<br> 当输入and 1=1时，后台会执行sql语句是：</p><p><code>select * from users where id =x and 1=1；</code></p><p>没有语法显示错误且，返回正常</p><p>当输入and 1=2时，后台会执行sql语句是：</p><p><code>select * from users where id =1 and 1=2;</code></p><p>也可以用id=2-1来判断</p><p>字符型：</p><h3 id="判断列数"><a href="#判断列数" class="headerlink" title="判断列数"></a>判断列数</h3><p>order by 函数是对MySQL中查询结果按照指定字段名进行排序，除了指定字 段名还可以指定字段的栏位进行排序，第一个查询字段为1，第二个为2，依次 类推。我们可以通过二分法来猜解列数。</p><p>输入 order by 4发现页面错误，说明没有4列。</p><p><code>http://127.0.0.1/sql/Less-1/?id=1&#39; order by 3 --+</code></p><h3 id="判断显示位"><a href="#判断显示位" class="headerlink" title="判断显示位"></a>判断显示位</h3><h4 id="显示位"><a href="#显示位" class="headerlink" title="显示位"></a>显示位</h4><p>我们在进行手工SQL注入的时候会用到ORDER BY 查询列数，然后通过UNION SELECT爆出在网页中的显示位。这个显示位指的是网页中能够显示数据的位置。举例来说，比如我们通过ORDER BY命令知道了表的列数为11。然后再使用UNION SELECT 1,2,3…,11 from table，网页中显示了信息8，那么说明网页只能够显示第8列中信息，不能显示其他列的信息。也可以理解为网页只开放了8这个窗口，你想要查询数据库信息就必须要通过这个窗口。所以如果我们想要知道某个属性的值，比如admin,就要把admin属性放到8的位置上，这样就能通过第8列爆出admin的信息。</p><h4 id="UNION查询"><a href="#UNION查询" class="headerlink" title="UNION查询"></a>UNION查询</h4><p>UNION的作用是将两个select查询结果合并，只要让第一行查询的结果是空集，即union左边的select子句查询结果为空，那么union右边的查询结果自然就成为了第一行，打印在网页上了。</p><p><code>http://127.0.0.1/sql/Less-1/?id=861&#39; union select 1,2,3 --+</code></p><h3 id="判断所有数据库名"><a href="#判断所有数据库名" class="headerlink" title="判断所有数据库名"></a>判断所有数据库名</h3><p>select schema_name from information_schema.schemata </p><p>information_schema,这是系统数据库，安装完成就会有，它记录着所有数据库，表，列，用户权限等，下面再说一下常用的几个表：</p><p>SCHEMATA表</p><p>储存着mysql所有的数据库信息，show databases的结果就是取自这个表。</p><p>TABLES表</p><p>储存的数据库所有的表信息，表是基本表还是系统表，创建时间，数据库的引擎是什么，表有多少行等，show tables from mysql的结果就是取自这个表。</p><p>Columns表</p><p>储存这数据库所有的列信息，show columns from mysql.user的结果就是取自这个表</p><p>这里还要说一点，group_concat函数可以显示出所有查询的所有数据，limit只显示某一行。</p><p>select group_concat(SCHEMA_NAME) from information_schema.SCHEMATA</p><p>显示当前数据库： databas()</p><p><code>http://127.0.0.1/sql/Less-1/?id=-1&#39; union select 1,(select group_concat(schema_name) from information_schema.schemata),3 --+</code></p><h3 id="猜某库的数据表"><a href="#猜某库的数据表" class="headerlink" title="猜某库的数据表"></a>猜某库的数据表</h3><p>select table_name from information_schema.tables where table_schema=’xxxxx’ </p><p><code>http://127.0.0.1/sql/Less-1/?id=-1&#39; union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=&#39;security&#39;),3 --+</code></p><h3 id="获取字段名"><a href="#获取字段名" class="headerlink" title="获取字段名"></a>获取字段名</h3><p><code>select group_concat(column_name) from information_schema.columns where table_name=&#39;users&#39;</code></p><h3 id="获取用户名密码"><a href="#获取用户名密码" class="headerlink" title="获取用户名密码"></a>获取用户名密码</h3><p><code>http://127.0.0.1/sql/Less-1/?id=-1&#39; union select 1,(select group_concat(username) from security.users),3 --+</code></p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web安全 </tag>
            
            <tag> SQL注入 </tag>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL学习</title>
      <link href="/Zzhanp.github.io/2021/03/25/sql-xue-xi/"/>
      <url>/Zzhanp.github.io/2021/03/25/sql-xue-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="SQL学习"><a href="#SQL学习" class="headerlink" title="SQL学习"></a>SQL学习</h1><h2 id="mysql创建数据库"><a href="#mysql创建数据库" class="headerlink" title="mysql创建数据库"></a>mysql创建数据库</h2><p>用create命令创建数据库：</p><p><code>CREATE DATABASE 数据库名;</code></p><h2 id="mysql删除数据库"><a href="#mysql删除数据库" class="headerlink" title="mysql删除数据库"></a>mysql删除数据库</h2><p>用drop命令删除数据库：</p><p><code>drop database &lt;数据库名&gt;;</code></p><h2 id="创建数据表"><a href="#创建数据表" class="headerlink" title="创建数据表"></a>创建数据表</h2><p>通用语法：</p><pre class=" language-mysql"><code class="language-mysql">CREATE TABLE table_name (column_name column_type);</code></pre><h2 id="删除数据表"><a href="#删除数据表" class="headerlink" title="删除数据表"></a>删除数据表</h2><pre class=" language-mysql"><code class="language-mysql">DROP TABLE table_name;</code></pre><p>例：</p><pre class=" language-mysql"><code class="language-mysql">root@host# mysql -u root -pEnter password:*******mysql> use RUNOOB;Database changedmysql> DROP TABLE runoob_tblQuery OK, 0 rows affected (0.8 sec)mysql></code></pre><h2 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h2><p>使用INSERT INTO 语句来插入数据，语法如下：</p><pre class=" language-mysql"><code class="language-mysql">INSERT INTO table_name ( field1, field2,...fieldN )                       VALUES                       ( value1, value2,...valueN );</code></pre><p>如果数据是字符型，必须使用单引号或双引号，如”value”。</p><pre class=" language-mysql"><code class="language-mysql">mysql> INSERT INTO runoob_tbl     -> (runoob_title, runoob_author, submission_date)    -> VALUES    -> ("学习 PHP", "菜鸟教程", NOW());</code></pre><h2 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h2><p>使用SELECT语句来查询数据，语法如下：</p><pre class=" language-mysql"><code class="language-mysql">SELECT column_name,column_nameFROM table_name[WHERE Clause][LIMIT N][ OFFSET M]</code></pre><ul><li><p>查询语句中你可以使用一个或者多个表，表之间使用逗号(,)分割，并使用WHERE语句来设定查询条件。</p></li><li><p>SELECT 命令可以读取一条或者多条记录。</p></li><li><p>你可以使用星号（*）来代替其他字段，SELECT语句会返回表的所有字段数据</p></li><li><p>你可以使用 WHERE 语句来包含任何条件。</p></li><li><p>你可以使用 LIMIT 属性来设定返回的记录数。</p></li><li><p>你可以通过OFFSET指定SELECT语句开始查询的数据偏移量。默认情况下偏移量为0。</p></li><li><p>例：</p><pre class=" language-mysql"><code class="language-mysql">select * from runoob_tbl;</code></pre></li></ul><h2 id="WHERE子句"><a href="#WHERE子句" class="headerlink" title="WHERE子句"></a>WHERE子句</h2><p>查询数据使用SQL SELECT语句，若要有条件地选取数据，可将WHERE子句添加到SELECT语句中。</p><pre class=" language-mysql"><code class="language-mysql">SELECT field1, field2,...fieldN FROM table_name1, table_name2...[WHERE condition1 [AND [OR]] condition2.....</code></pre><ul><li>WHERE 子句类似于程序语言中的 if 条件，根据 MySQL 表中的字段值来读取指定的数据。</li></ul><h2 id="UPDATE更新"><a href="#UPDATE更新" class="headerlink" title="UPDATE更新"></a>UPDATE更新</h2><p>如果需要修改或更新mysql中的数据，可以用SQL UPDATE命令：</p><pre class=" language-mysql"><code class="language-mysql">UPDATE table_name SET field1=new-value1, field2=new-value2[WHERE Clause]</code></pre><ul><li>你可以同时更新一个或多个字段。</li><li>你可以在 WHERE 子句中指定任何条件。</li><li>你可以在一个单独表中同时更新数据。</li></ul><p>例：</p><pre class=" language-mysql"><code class="language-mysql">mysql> UPDATE runoob_tbl SET runoob_title='学习 C++' WHERE runoob_id=3; Query OK, 1 rows affected (0.01 sec)  mysql> SELECT * from runoob_tbl WHERE runoob_id=3; +-----------+--------------+---------------+---------------+ | runoob_id | runoob_title | runoob_author | submission_date +-----------+--------------+---------------+---------------+ | 3         | 学习 C++   | RUNOOB.COM    | 2016-05-06      | +-----------+--------------+---------------+---------------+ 1 rows in set (0.01 sec)</code></pre><h2 id="UNION查询"><a href="#UNION查询" class="headerlink" title="UNION查询"></a>UNION查询</h2><p>MySQL UNION 操作符用于连接两个以上的 SELECT 语句的结果组合到一个结果集合中。多个 SELECT 语句会删除重复的数据。语法如下：</p><pre class=" language-mysql"><code class="language-mysql">SELECT expression1, expression2, ... expression_nFROM tables[WHERE conditions]UNION [ALL | DISTINCT]SELECT expression1, expression2, ... expression_nFROM tables[WHERE conditions];</code></pre><ul><li><strong>expression1, expression2, … expression_n</strong>: 要检索的列。</li><li><strong>tables:</strong> 要检索的数据表。</li><li><strong>WHERE conditions:</strong> 可选， 检索条件。</li><li><strong>DISTINCT:</strong> 可选，删除结果集中重复的数据。默认情况下 UNION 操作符已经删除了重复数据，所以 DISTINCT 修饰符对结果没啥影响。</li><li><strong>ALL:</strong> 可选，返回所有结果集，包含重复数据。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web安全学习</title>
      <link href="/Zzhanp.github.io/2021/03/05/web-an-quan-xue-xi/"/>
      <url>/Zzhanp.github.io/2021/03/05/web-an-quan-xue-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="Web安全学习"><a href="#Web安全学习" class="headerlink" title="Web安全学习"></a>Web安全学习</h1><h2 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h2><p>HTTP(HyperText Transfer Protocol)即超文本传输协议，它允许将HTML文档从Web服务器传送到Web浏览器。</p><p>URL：统一资源定位符，即网页地址。标准格式：</p><p><strong>协议://服务器IP[:端口]/路径/[?查询]，如<a href="http://www.xxser.com/post/httpxieyi.html" target="_blank" rel="noopener">http://www.xxser.com/post/httpxieyi.html</a></strong></p><p>Windows中，可以用curl.exe工具，通过curl+URL命令即可发起一个HTTP请求。</p><p>HTTP是一种无状态的协议。当一个客户端向服务器端发出请求，然后Web服务器返回响应（Response），连接就被关闭了，在服务器端不保留连接的有关信息。<strong>HTTP请求只能由客户端发起，而服务器不能主动向客户端发送数据。</strong></p><h3 id="HTTP请求"><a href="#HTTP请求" class="headerlink" title="HTTP请求"></a>HTTP请求</h3><p><code>GET / HTTP/1.1</code>                     <!--请求行--><br><code>Host: www.baidu.com</code>          <!--请求头--><br><code>User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:86.0) Gecko/20100101 Firefox/86.0</code></p><p>请求行由说明该请求是GET请求，使用的是HTTP1.1版本。</p><p>请求头中，HOST代表请求的主机地址，User-Agent代表浏览器的标识。</p><h3 id="HTTP请求方法"><a href="#HTTP请求方法" class="headerlink" title="HTTP请求方法"></a>HTTP请求方法</h3><p>GET：GET方法用于获取请求页面的指定信息。</p><p>HEAD：HEAD方法除了服务器不能在响应里返回消息主体外，其他都与FET方法相同。</p><p>POST：向服务器传输大量的数据，通常使用POST请求。</p><h3 id="HTTP状态码"><a href="#HTTP状态码" class="headerlink" title="HTTP状态码"></a>HTTP状态码</h3><p>1xx：信息提示，标识请求已被成功接收，继续处理，其范围为100~101.</p><p>2xx：成功，服务器成功地处理了请求，范围为200~206.</p><p>3xx：重定向，用于告诉浏览器客户端，他们访问的资源已被移动，并告诉客户端新的资源地址位置。</p><p>4xx：客户端错误状态码，有时客户端会发送一些服务器无法处理的东西，比如格式错误的请求，或者最常见的是，请求一个不存在的URL。</p><p>5xx：描述服务器内部错误。</p><p><strong>常见状态码：</strong></p><p>200：客户端请求成功，是最常见的状态。</p><p>302：重定向。</p><p>404：请求资源不存在。</p><p>400：客户端请求有语法错误，不能被服务器所理解。</p><p>401：请求未经授权。</p><p>403：服务器收到请求，但是拒绝提供服务。</p><p>500：服务器内部错误，是最常见的状态。</p><p>503：服务器当前不能处理客户端的请求，一段时间后可能恢复正常。</p><h3 id="HTTP消息"><a href="#HTTP消息" class="headerlink" title="HTTP消息"></a>HTTP消息</h3><p>又称HTTP头（HTTP header），由请求头、响应头、普通头和实体头组成。</p><p><strong>请求头：</strong></p><p>请求头只出现在HTTP请求中，常用的HTTP请求头如下：</p><p>Host：指定被请求资源的Internet主机和端口号。</p><p>User-Agent：允许客户端将它的操作系统、浏览器和其他属性告诉服务器。</p><p>Referer：Referer包含一个URL，代表当前访问URL的上一个URL。如：Referer:<a href="http://www.xxser.com/login.php，代表用户从login.php来到当前页面。" target="_blank" rel="noopener">www.xxser.com/login.php，代表用户从login.php来到当前页面。</a></p><p>Cookie：它是一段文本，常用来表示请求者身份。</p><p>Range：可以请求实体的部分内容，多线程下载一定会用到此请求头。</p><p>x-forward-for：即XFF头，他代表请求端的IP，可以有多个，中间以逗号隔开。</p><p>Accept：用于指定客户端接收哪些MIME类型的消息，如Accept：text/html，表明客户端希望接收HTML文本。</p><p><strong>响应头：</strong></p><p>Server：服务器所使用的Web服务器名称，如Server:Apache/1.3.6(Unix)，攻击者通过查看此头，可以探测Web服务器名称。</p><p>Set-Cookie：向客户端设置Cookie，通过查看此头，可以清楚地看到服务器向客户端发送的Cookie信息。</p><p>Lsat-Modified：服务器通过这个头告诉浏览器，资源的最后修改时间。</p><p>Location：告诉浏览器去访问哪个页面，浏览器收到此请求后，通常会立刻访问Location头所指向地页面。这个头通常配合302状态码使用.</p><p>Refresh：告诉浏览器定时刷新浏览器。</p><h3 id="HTTP协议与HTTPS协议的区别"><a href="#HTTP协议与HTTPS协议的区别" class="headerlink" title="HTTP协议与HTTPS协议的区别"></a>HTTP协议与HTTPS协议的区别</h3><p>HTTPS：Hyper Text Transfer Protocol over SecureSocket Layer，是以安全为目标地HTTP通道。</p><p>HTTPS地安全基础是SSL 。</p><p>HTTP 是超文本传输协议，信息是明文传输，HTTPS则是具有安全性地SSL加密传输协议。</p><p>HTTP采用80端口连接，HTTP是443端口。</p><p>HTTPS协议需要到ca申请证书。</p><h2 id="信息探测"><a href="#信息探测" class="headerlink" title="信息探测"></a>信息探测</h2><h3 id="Google-Hack"><a href="#Google-Hack" class="headerlink" title="Google Hack"></a>Google Hack</h3><h4 id="搜集Web信息"><a href="#搜集Web信息" class="headerlink" title="搜集Web信息"></a>搜集Web信息</h4><p>site：指定域名</p><p>intext：正文中存在关键字地网页</p><p>intitle：标题中存在关键字地网页</p><p>info：一些基本信息</p><p>inurl：URL存在关键字地网页</p><p>filetype：搜索指定文件类型</p><p>例：intitle:管理登录 filetype:php：查询网页标题含有“管理登录”，并且为php类型地网页。</p><h2 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h2>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP</title>
      <link href="/Zzhanp.github.io/2021/03/02/php/"/>
      <url>/Zzhanp.github.io/2021/03/02/php/</url>
      
        <content type="html"><![CDATA[<h1 id="PHP学习"><a href="#PHP学习" class="headerlink" title="PHP学习"></a>PHP学习</h1><h2 id="PHP基础"><a href="#PHP基础" class="headerlink" title="PHP基础"></a>PHP基础</h2><h3 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a><strong>搭建环境</strong></h3><p><strong>静态网站访问流程：</strong></p><p>本地DNS和网络DNS，先经过本地DNS寻找，再去网络DNS寻找。</p><p>/index.heml：URI（Identifier）统一资源标识，目标机器上相对某个文件夹的相对路径。</p><p>Apache根据URI获取文件，读取文件内容。</p><p><strong>动态网站访问流程：</strong></p><p>与静态差不多，但多出几个内容：<strong>服务器端解析、数据库</strong>。</p><p><strong>Apache目录结构：</strong></p><p>bin：windows下的一些可执行文件</p><p>conf：配置文件目录</p><p>htdocs：Apache默认的主机地址</p><p>凡是涉及到Apache配置文件的修改，需要重启Apache才能生效。</p><p><strong>PHP目录结构：</strong></p><p>ext：扩展包，PHP很多功能是通过加载扩展来实现。</p><p>PHP.exe：PHP解释器</p><h3 id="PHP语法基础"><a href="#PHP语法基础" class="headerlink" title="PHP语法基础"></a><strong>PHP语法基础</strong></h3><p><strong>php代码标记：</strong>&lt;?php php代码?&gt;</p><p><strong>php注释：</strong></p><p>行注释：//或#</p><p>块注释：一次注释多行</p><p>/<em> xxxxxx</em>/</p><p><strong>php语句分隔符：</strong>分号“;”（英文状态）</p><p>特殊说明：</p><p>1、PHP中标记结束符?&gt;有自带语句结束符的效果，最后一行PHP代码可以没有语句结束符“;”。</p><p>2、PHP中很多代码的书写并不是嵌入到HTML中，而是单独存在，通常书写习惯中不建议使用标记结束符?&gt;</p><h4 id="变量"><a href="#变量" class="headerlink" title="变量"></a><strong>变量</strong></h4><p><strong>定义变量：</strong>php中不需要任何关键字定义变量，所有变量必须使用“$”。</p><p><code>$var1;</code></p><p><code>$var2 = 1;</code></p><p><strong>访问变量：</strong>echo $var2; //通过var2变量名字找到存储内容1，然后输出。</p><p><strong>删除变量：</strong>使用unset，unset($var2)</p><p><strong>变量命名规则：</strong>由字母、数字和下划线构成，不能以数字开头。</p><p><strong>预定义变量：</strong><code>$_GET,$_POST,$_REQUEST,$_COOKIE,$_SERVER</code>等。</p><p>$_GET:获取所有表单以get方式提交的数据。</p><p>变量传值：将一个变量赋值给另外一个变量</p><p>值传递：讲变量保存的值复制一份，然后将新的值给另外一个变量保存。</p><p>引用传递：将变量保存的值所在的内存地址，传递给另一个变量，两个变量指向同一块内存空间。</p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>信安实验室之MISC</title>
      <link href="/Zzhanp.github.io/2020/07/11/xin-an-shi-yan-shi-zhi-misc/"/>
      <url>/Zzhanp.github.io/2020/07/11/xin-an-shi-yan-shi-zhi-misc/</url>
      
        <content type="html"><![CDATA[<h1 id="信安实验室之MISC"><a href="#信安实验室之MISC" class="headerlink" title="信安实验室之MISC"></a>信安实验室之MISC</h1><p>本以为进不去实验室了，没想到老天眷顾，给了我这次机会，那便好好努力吧！</p><h2 id="Welcome"><a href="#Welcome" class="headerlink" title="Welcome"></a>Welcome</h2><p>签到题，给了一串字符</p><p>ZmxhZ3tXZTFjMG1lX3QwX0IxVF9OU0MhfQ==</p><p>Base64加密，解密即可得</p><p>flag{We1c0me_t0_B1T_NSC!}</p><p><strong>这里想说的是后面有俩等号的都是base64加密</strong></p><h2 id="PDF-1"><a href="#PDF-1" class="headerlink" title="PDF_1"></a>PDF_1</h2><p>第一次遇到pdf的题，打开看到是一张图片，一开始我还想着把pdf改成jpg或png呢。。。太傻了简直。。</p><p>猜想flag隐藏在图片下方，如何移开图片呢？</p><p>1.利用在线工具：<a href="https://app.xunjiepdf.com/pdf2word" target="_blank" rel="noopener">https://app.xunjiepdf.com/pdf2word</a> 将pdf转换为word，从而移开图片</p><p><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/ctf2.png" alt="ctf2" style="zoom: 50%;"></p><p>可以看到左上角有一行flag</p><p>2.apowerpdf 本地工具打开pdf,将照片移开得到flag</p><p>3.用Linux自带工具pdftotext将pdf转为txt</p><p><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/ctf1.png" alt="ctf1"></p><p>转为txt后，用grep查找flag或者直接打开txt来查找</p><h2 id="数独"><a href="#数独" class="headerlink" title="数独"></a>数独</h2><p>给了一个数独，并提示：flag：第一行和最后一行连接形成的字符串，再经过MD5转换，取32位大写</p><p>emm然而我并不会解数独。。。不过还好有万能的百度</p><p><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/ctf3.png" alt="ctf3" style="zoom:67%;"></p><p>第一行加最后一行是267381945895143267</p><p>MD5转换得：ae382493d0b370d6959d8b44ab128bda</p><p>转换大写即可flag{AE382493D0B370D6959D8B44AB128BDA}</p><h2 id="DIO-1"><a href="#DIO-1" class="headerlink" title="DIO_1"></a>DIO_1</h2>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> misc </tag>
            
            <tag> 信安实验室 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bugku-web-wp</title>
      <link href="/Zzhanp.github.io/2020/05/10/bugku-web-wp/"/>
      <url>/Zzhanp.github.io/2020/05/10/bugku-web-wp/</url>
      
        <content type="html"><![CDATA[<h1 id="bugku-web"><a href="#bugku-web" class="headerlink" title="bugku-web"></a>bugku-web</h1><p>最近学校的ctf比赛开始了，但是尝试了一下，几乎一道都做不出来。。。</p><p>唉。。还是稳扎稳打，一步一步来吧</p><h2 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h2><p>F12查看源代码</p><p><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/image-20200510173650240.png" alt=""></p><h2 id="计算器"><a href="#计算器" class="headerlink" title="计算器"></a>计算器</h2><p>这道题是让你输个验证码，但是输的时候发现只能输一位数字。</p><p>F12，修改验证框的大小</p><p><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/image-20200510181926711.png" alt="image-20200510181926711"></p><p>1修改为10，之后就能输的下啦~</p><p>点击验证，得到flag{CTF-bugku-0032}</p><h2 id="web基础-GET"><a href="#web基础-GET" class="headerlink" title="web基础$_GET"></a>web基础$_GET</h2><p><code>$what=$_GET[&#39;what&#39;];//读取参数what，把值存到变量what中 echo $what;//输出 if($what==&#39;flag&#39;)//如果值为flag echo &#39;flag{****}&#39;;//打印flag</code></p><p>因此，地址修改为<code>http://123.206.87.240:8002/get/?what=flag</code></p><p><u>这里要注意，get请求，传入参数的形式是在url后面加 <strong>?参数=值</strong></u></p><p><u>多个参数用<strong>?参数1=值1&amp;参数2=值2……</strong></u></p><h2 id="web基础-POST"><a href="#web基础-POST" class="headerlink" title="web基础$_POST"></a>web基础$_POST</h2><p>题目和上一道类似，考察基础</p><p><code>$what=$_POST[&#39;what&#39;];//接受post过来的参数what，存到what里 echo $what;//打印 if($what==&#39;flag&#39;)//如果值是flag echo &#39;flag{****}&#39;;//打印flag</code></p><p>注意，POST请求没法写在url里，需要用hackbar或者burp修改，格式是在</p><p><strong>参数1=值&amp;参数2=值</strong></p><p><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/post.png" alt="post"></p><p>之后得到</p><p><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/image-20200510182951888.png" alt=""></p><h2 id="矛盾"><a href="#矛盾" class="headerlink" title="矛盾"></a>矛盾</h2><p>看题</p><p><code>$num=$_GET[&#39;num&#39;];//获取参数num if(!is_numeric($num))//如果不是数字 { echo $num;//打印 if($num==1)//如果是数字且为1 echo &#39;flag{**********}&#39;;打印flag }</code></p><p>搜索一下 is_numeric() 函数：</p><p><strong>用于检测变量是否为数字或数字字符串</strong></p><p> 这个要求不是数字且为1，有点矛盾是不是？其实有绕过的办法。下面num==1的判定是两个等号，这是弱类型比较，如果等号两边类型不同，会转换成相同类型再比较。与之对应的是强类型比较，用的是三个等号===，如果类型不同就直接不相等了。<strong>在弱类型比较下，当一个字符串与数字比较时，会把字符串转换成数字，具体是保留字母前的数字。例如123ab7c会转成123，ab7c会转成0.（字母前没数字就是0）</strong></p><p>所以payload：</p><p><code>http://123.206.87.240:8002/get/index1.php?num=1a</code></p><p>得1aflag{bugku-789-ps-ssdf}</p><h2 id="web3"><a href="#web3" class="headerlink" title="web3"></a>web3</h2><p>打开页面后有个弹窗，点击阻止加载</p><p>F12查看原码</p><p><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/image-20200510214748579.png" alt="image-20200510214748579"></p><p>发现下面有一串字</p><p><code>&amp;#75;&amp;#69;&amp;#89;&amp;#123;&amp;#74;&amp;#50;&amp;#115;&amp;#97;&amp;#52;&amp;#50;&amp;#97;&amp;#104;&amp;#74;&amp;#75;&amp;#45;&amp;#72;&amp;#83;&amp;#49;&amp;#49;&amp;#73;&amp;#73;&amp;#73;&amp;#125;</code></p><p>是一串Unicode码，打开转换工具，转成ASCII码即可得到flag</p><p>&#75;&#69;&#89;&#123;&#74;&#50;&#115;&#97;&#52;&#50;&#97;&#104;&#74;&#75;&#45;&#72;&#83;&#49;&#49;&#73;&#73;&#73;&#125;</p><p>惊奇的发现，typora中Unicode居然能自动转为ASCII码。。</p><h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2><p>题目是让把  flag.baidu.com  解析到123.206.87.240</p><p>打开电脑的host文件，添加解析规则</p><p>C:\Windows\System32\drivers\etc</p><p>添加  123.206.87.240 flag.baidu.com</p><p>之后再访问flag.baidu.com即可得到flag</p><p><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/image-20200510215629963.png" alt="image-20200510215629963"></p><p>学习一下host文件：</p><p><strong>Hosts是一个没有扩展名的系统文件，可以用记事本等工具打开，其作用就是将一些常用的网址域名与其对应的IP地址建立一个关联“数据库”，当用户在浏览器中输入一个需要登录的网址时，系统会首先自动从Hosts文件中寻找对应的IP地址，一旦找到，系统会立即打开对应网页，如果没有找到，则系统会再将网址提交DNS域名解析服务器进行IP地址的解析。<br>需要注意的是，Hosts文件配置的映射是静态的，如果网络上的计算机更改了请及时更新IP地址，否则将不能访问。</strong></p><h2 id="你必须让他停下"><a href="#你必须让他停下" class="headerlink" title="你必须让他停下"></a>你必须让他停下</h2>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bugku </tag>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bugku之misc</title>
      <link href="/Zzhanp.github.io/2020/05/01/bugku-zhi-misc/"/>
      <url>/Zzhanp.github.io/2020/05/01/bugku-zhi-misc/</url>
      
        <content type="html"><![CDATA[<h1 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h1><p>学校的题没有解析。。好多不太会做，于是重拾bugku，从bugku开始我的ctf之旅吧~</p><h3 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h3><p>emm<br>懂的都懂</p><h3 id="这是一张单纯的图片"><a href="#这是一张单纯的图片" class="headerlink" title="这是一张单纯的图片"></a>这是一张单纯的图片</h3><p>看题~<br><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/525_1.png" alt="525_1"><br>给了一张图片，FLAG在哪里？<br>根据提示，考虑图片隐写<br><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/527_1.jpg" alt="527_1"><br>查看属性<br><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/529_1.png" alt="529_1"><br>没有什么异常~<br>用010查看<br><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/531_1.png" alt="531_1"><br>发现最下端有一段Unicode编码<br>复制 解码<br><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/533_1.png" alt="533_1"><br>over~<br><strong>思考：因为看学长做了一遍，所以知道做法。我想知道怎样判断考的是这种Unicode编码还是那种改长和宽的？？？<br>另外，要学习一下怎样看那个png的编码，哪里是长、哪里是宽！</strong></p><h3 id="隐写"><a href="#隐写" class="headerlink" title="隐写"></a>隐写</h3><p>看题~ 给了一张图片<br><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/537_1.png" alt="537_1" style="zoom:80%;"><br>根据现有的经验<br>png文件 查看属性<br><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/539_1.png" alt="539_1"><br>高和宽不对等<br>尝试改变高度 0420 换成16进制是01A4<br><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/541_1.png" alt="541_1"><br>如图 将A4改为F4<br><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/543_1.png" alt="543_1"><br>保存<br><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/545_1.png" alt="545_1" style="zoom:67%;"><br>果然最下面出现了flag~</p><p><strong>这里总结一下：图片隐写类，png文件要看看高宽是否相等<br>png的数据头是89504E47</strong><br><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/547_1.png" alt="547_1"></p><p><strong>jpg文件 开始标志 FF D8  结束标志 FF D9</strong><br><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/549_1.png" alt="549_1"><br><strong>png文件的第二行八个字节表示宽和高<br>前四位是宽 后四位是高</strong></p><h3 id="telnet"><a href="#telnet" class="headerlink" title="telnet"></a>telnet</h3><p><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/551_1.png" alt="551_1"><br>给了一个zip包<br>下载解压<br><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/553_1.png" alt="553_1"><br>发现居然能用wireshark打开（幸好之前下载过）<br>百度了一下telnet<br><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/555_1.png" alt="555_1"><br>看到熟悉的TCP/IP 与wireshark有关也不奇怪了</p><h3 id="啊哒"><a href="#啊哒" class="headerlink" title="啊哒"></a>啊哒</h3><p>看题<br><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/557_1.png" alt="557_1"><br>解压 是一张jpg图片<br><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/559_1.jpg" alt="559_1" style="zoom:50%;"><br>由于先前的经验（之前一道jpg的题是文件最后藏了一串Unicode编码）<br>于是 拖进010查看<br><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/561_1.png" alt="561_1"><br>果然 在最后发现了 flag.txt<br>说明这个图片里藏着一个txt文件<br>这里有一个强大的工具 <strong>binwalk</strong><br>是<strong>查看下载的文件中是否包含其他文件</strong>的神器，正好与本题需求契合</p><p>打开kali 将图片拖进去 binwalk分析一番<br><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/563_1.png" alt="563_1"><br>果然里面藏着一个flag.txt<br>接下来的任务就是把这个txt文件提取出来<br>分离文件的方法有很多，如binwalk、foremost、dd等<br>这里采用foremost<br><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/565_1.png" alt="565_1"><br><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/567_1.png" alt="567_1"><br>成功分离~<br>但是这里发现此文件需要密码</p><p>但是过程中并没有什么密码。。<br>回头重新查看图片<br><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/569_1.png" alt="569_1"><br>发现这里有一串奇怪的数字<br>十六进制解码一下得到一个像解压密码的东西<br><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/571_1.png" alt="571_1"><br>试一下~<br><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/573_1.png" alt="573_1"><br>成功~</p><p><strong>总结：这道题挺有意思的，学到的也挺多</strong></p><h4 id="分离文件"><a href="#分离文件" class="headerlink" title="分离文件"></a>分离文件</h4><p>binwalk：<strong>多重文件查看利器</strong><br>在CTF的<strong>MISC类题型和IOT安全的固件解包分析</strong>中广泛应用</p><p><strong>binwalk的主要功能：</strong></p><h5 id="扫描固件"><a href="#扫描固件" class="headerlink" title="扫描固件"></a>扫描固件</h5><p>Binwalk可以扫描许多不同嵌入式文件类型和文件系统的固件映像，只需给它一个要扫描的文件列表<br>binwalk xxxx.xxx（文件名）</p><h5 id="文件提取（-e-–extract）"><a href="#文件提取（-e-–extract）" class="headerlink" title="文件提取（-e,–extract）"></a>文件提取（-e,–extract）</h5><p>可以使用-e选项提取它在固件映像中找到的任何文件。</p><pre><code>binwalk -e firmware.bin</code></pre><p><strong>foremost</strong></p>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bugku </tag>
            
            <tag> ctf </tag>
            
            <tag> misc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>部署后没有新文章</title>
      <link href="/Zzhanp.github.io/2020/04/30/bu-shu-hou-mei-you-xin-wen-zhang/"/>
      <url>/Zzhanp.github.io/2020/04/30/bu-shu-hou-mei-you-xin-wen-zhang/</url>
      
        <content type="html"><![CDATA[<p>今天写了一篇新博客，一波操作上传后发现博客里并没有那篇新文章。。</p><p>找了一下public文件夹里也没有那篇。。</p><p>搜索也没搜出来什么。。</p><p>最后对比了一下，发现这篇新文章tags后面少了个空格。。。。。。</p><p><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/image-20200430141520766.png" alt="image-20200430141520766"></p><p>汗(lll￢ω￢)。。。以此为戒吧。。</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给博客设置图床(PicGo+腾讯云)</title>
      <link href="/Zzhanp.github.io/2020/04/30/gei-bo-ke-she-zhi-tu-chuang-picgo-jia-teng-xun-yun/"/>
      <url>/Zzhanp.github.io/2020/04/30/gei-bo-ke-she-zhi-tu-chuang-picgo-jia-teng-xun-yun/</url>
      
        <content type="html"><![CDATA[<h1 id="PicGo-腾讯云COS设置图床"><a href="#PicGo-腾讯云COS设置图床" class="headerlink" title="PicGo+腾讯云COS设置图床"></a>PicGo+腾讯云COS设置图床</h1><p>写博客不配图片实在是没有趣味。。。</p><p>记得以前配过七牛云的，但是最近打开博客发现全都失效了：原因是七牛云设置的测试域名，有效期只有30天，而若用自己的域名的话，还要去备案，而我又没有服务器。。。</p><p>找来找去，发现了腾讯云+PicGo的方法。</p><p>首先</p><h4 id="1-注册腾讯云及创建对象存储"><a href="#1-注册腾讯云及创建对象存储" class="headerlink" title="1.注册腾讯云及创建对象存储"></a>1.注册腾讯云及创建对象存储</h4><p><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/image-20200430134037678.png" style="zoom:67%;"></p><p>首先，创建存储桶。需要注意的是，访问权限一定要填<strong>公有读私有写</strong></p><h4 id="2-配置腾讯云密钥"><a href="#2-配置腾讯云密钥" class="headerlink" title="2.配置腾讯云密钥"></a>2.配置腾讯云密钥</h4><p><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/image-20200430134355633.png" alt=""></p><p>点击 新建密钥，复制SecretId和SecretKey</p><h4 id="3-下载PicGo并设置图床"><a href="#3-下载PicGo并设置图床" class="headerlink" title="3.下载PicGo并设置图床"></a>3.下载PicGo并设置图床</h4><p><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/peizhi.png" alt=""></p><p>把刚才复制的东西依次填入，这里需要注意，cos版本要选到v5，刚开始没注意，默认在v4，结果后来无论怎样都上传失败。。。最后把调到v5就可以了~</p><p>美中不足的是，这个腾讯云的免费存储只有6个月。不过暂时也够用了，到期了再说吧。。</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>上传博客时遇到的问题</title>
      <link href="/Zzhanp.github.io/2020/04/29/shang-chuan-bo-ke-shi-yu-dao-de-wen-ti/"/>
      <url>/Zzhanp.github.io/2020/04/29/shang-chuan-bo-ke-shi-yu-dao-de-wen-ti/</url>
      
        <content type="html"><![CDATA[<p>好久没有玩博客了，域名也到期了。今天心血来潮，又买了个新域名，搞了好久。</p><p>终于能打开博客了，但发现主题还是旧的。想到我新配置的文件还没有上传，但是上传时出现了问题。</p><p><code>fatal: Could not read from remote repository.</code></p><p><code>Please make sure you have the correct access rights</code><br><code>and the repository exists.</code></p><p>首先查了一下第二个错误：</p><p>网上说是ssh文件没有配置好，输入ssh -T <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>验证一下，又出现了</p><p><code>Error: git@github.com: Permission denied (publickey)</code></p><p>再搜索一下，还是在说ssh的事情。。。打开GitHub发现我的SSH key里居然什么都没有。。</p><p>遂到 <strong>C:\用户\lenovo\ .ssh</strong>中找到了id_rsa和id_rsa.pub两个文件</p><p>把id_rsa.pub中的代码复制到GitHub里</p><p>开心的想着，这下应该可以了吧~</p><p>然后<code>$ ssh git@github.com</code></p><p><code>Hi Zzhanp! You&#39;ve successfully authenticated, but GitHub does not provide shellaccess.</code></p><p>晕。。这啥意思啊。。有个not。。感觉又失败了。。</p><p>搜索一下：有的说</p><!--这种方式比较简单粗暴，直接将`GitHub`的`ssh key`删除掉，然后重新生成一份新的。--><p>有的说 没关系，这就是成功了</p><p>因为我懒。。所以我愿意相信第二种说法。。</p><p>然后hexo d，出现了</p><figcaption>You must verify your email address.</figcaption><pre class=" language-ERROR:"><code class="language-ERROR:">See https://github.com/settings/emails.</code></pre><p>emm，我只是想上传个博客。。</p><p>再搜索。。说应该是我的邮箱失效了</p><p>登上GitHub一看果然：</p><p><img src="https://zzhanp-1257986342.cos.ap-beijing.myqcloud.com/img/email.png" alt=""></p><p>上网搜了一下，让再整一个qq邮箱来验证，照做。</p><p>又看到什么改完邮箱以后还要重新配置一下。。。</p><p>好麻烦。。懒惰的我，死马当活马医，又试了一下hexo d</p><p>没想到居然成功了。。。</p><p>总之。。今天的事情我也不知道问题出在哪里。。记录一下以防万一吧。。。</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>寒假学习计划</title>
      <link href="/Zzhanp.github.io/2019/01/19/han-jia-xue-xi-ji-hua/"/>
      <url>/Zzhanp.github.io/2019/01/19/han-jia-xue-xi-ji-hua/</url>
      
        <content type="html"><![CDATA[<p>1.Python（大创学习任务）</p><p>2.51单片机（最好能到点阵LED）</p><p>3.arduino（完成俱乐部任务）</p><p>4.学有余力：Linux视频</p><p>加油！！</p>]]></content>
      
      
      <categories>
          
          <category> 学习计划 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019计划</title>
      <link href="/Zzhanp.github.io/2019/01/13/2019-ji-hua/"/>
      <url>/Zzhanp.github.io/2019/01/13/2019-ji-hua/</url>
      
        <content type="html"><![CDATA[<p><strong>19年打卡~~</strong></p><ul><li><p>[ ] 1.去一趟故宫，在故宫看一场初雪~（希望老天配合）</p></li><li><p>[ ] 2.在景山公园看一次日出~</p></li><li><p>[ ] 3.在香山看一次日落~</p></li><li><p>[ ] 4.去雍和宫上一炷香</p></li><li><p>[ ] 5.看一场德云社的相声</p></li><li><p>[ ] 6.去三联通宵看一页的书~</p></li><li><p>[x] 7.去簋街吃好吃哒~</p></li><li style="list-style: none"><input type="checkbox"> 8.读20本书（<strong>要包括英文书</strong>）</li><li style="list-style: none"><input type="checkbox"> 9.学会python和单片机</li></ul>]]></content>
      
      
      <categories>
          
          <category> 生活感悟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019</title>
      <link href="/Zzhanp.github.io/2018/12/31/2019/"/>
      <url>/Zzhanp.github.io/2018/12/31/2019/</url>
      
        <content type="html"><![CDATA[<p>2019年，新的一年，加油！努力做那个更好的自己！</p>]]></content>
      
      
      <categories>
          
          <category> 生活感悟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 所思所想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>等值数列段</title>
      <link href="/Zzhanp.github.io/2018/11/21/deng-zhi-shu-lie-duan/"/>
      <url>/Zzhanp.github.io/2018/11/21/deng-zhi-shu-lie-duan/</url>
      
        <content type="html"><![CDATA[<p>这几天做C语言作业时遇到一道挺有意思的题（其实是自己被难到了），决定在这里好好理一下自己的思路~</p><p><strong>题目描述：</strong></p><p>如果一个数列中的某一段（至少有两个元素）的各元素值均相同，则称之为等值数列段。等值数列段中元素的个数叫做等值数列段的长度。</p><p><strong>输入：</strong>        由N个元素组成的整数数列A（其中N&lt;=50)</p><p><strong>输出：</strong>        A中长度最大的所有等值数列段的始末位置，如果没有等值数列段，则输出No equal number list.</p><p><strong>说明：</strong>        始末位置是指数组下标，即0表示第一个元素。<br>​        如果有多个同等长度的等值数列，只输出第一个等值数列的起始位置。即：当在一个LIST中出现两个等长的连续串时，答案应该是第一个等长串。</p><p><strong>思路：</strong></p><p>这道题有几个难点：一是如何让计算机找出重复的数列；二是如何数数列的长度；三是如何找出最长的数列。</p>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 疑难问题 </tag>
            
            <tag> C语言 </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub打不开解决方案</title>
      <link href="/Zzhanp.github.io/2018/11/08/github-da-bu-kai-jie-jue-fang-an/"/>
      <url>/Zzhanp.github.io/2018/11/08/github-da-bu-kai-jie-jue-fang-an/</url>
      
        <content type="html"><![CDATA[<p><strong>GitHub打不开的解决方案</strong></p><p><img src="http://pi0d6q266.bkt.clouddn.com/a.png" alt="image"></p><p>解决这个问题的方法是 更改hosts文件，地址：C:\Windows\System32\Drivers\etc</p><p>在文章的末尾添加：</p><p>#github</p><p>192.30.253.112 github.com <!--这里的一串数字是你的ip地址，具体查看方式在下方--></p><p>151.101.185.194 github.global.ssl.fastly.net</p><p>此时你可能会遇到权限不足问题，会提示你是否以管理员的身份编辑，点确定即可</p><p>下面是<strong>查找的github的网址</strong>：</p><p><a href="http://github.com.ipaddress.com/" target="_blank" rel="noopener">http://github.com.ipaddress.com/</a></p><p><strong>查找域名github.global.ssl.fastly.net：网址</strong>：（<a href="http://github.global.ssl.fastly.net.ipaddress.com/）" target="_blank" rel="noopener">http://github.global.ssl.fastly.net.ipaddress.com/）</a></p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>本学期学习计划</title>
      <link href="/Zzhanp.github.io/2018/11/08/ben-xue-qi-xue-xi-ji-hua/"/>
      <url>/Zzhanp.github.io/2018/11/08/ben-xue-qi-xue-xi-ji-hua/</url>
      
        <content type="html"><![CDATA[<p>课程之外：<br><strong>1.本学期要学完Python</strong>（为大创做准备）<br>2.51单片机（掌握）<br>3.Arduino（了解）<br>课程之内：<br>1.工科数学分析（多做题）<br>2.线性代数（习题册）<br>3.C语言（积极完成作业）</p><p>tip:本学期要加油鸭！大学的第一个学期，不能懒惰！<br>要多更新博客！</p>]]></content>
      
      
      <categories>
          
          <category> 学习计划 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习计划 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
